
YWinth_MainMPU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000138  00800100  00000fbe  00001052  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fbe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800238  00800238  0000118a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000118a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00001228  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002cf8  00000000  00000000  00001400  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001102  00000000  00000000  000040f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fa6  00000000  00000000  000051fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000408  00000000  00000000  000061a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009b6  00000000  00000000  000065a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f21  00000000  00000000  00006f5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000178  00000000  00000000  00007e7f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c1       	rjmp	.+650    	; 0x28c <__ctors_end>
   2:	00 00       	nop
   4:	60 c1       	rjmp	.+704    	; 0x2c6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c1       	rjmp	.+700    	; 0x2c6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c1       	rjmp	.+696    	; 0x2c6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c1       	rjmp	.+692    	; 0x2c6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c1       	rjmp	.+688    	; 0x2c6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c1       	rjmp	.+684    	; 0x2c6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c1       	rjmp	.+680    	; 0x2c6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c1       	rjmp	.+676    	; 0x2c6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c1       	rjmp	.+672    	; 0x2c6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c1       	rjmp	.+668    	; 0x2c6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c1       	rjmp	.+664    	; 0x2c6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c1       	rjmp	.+660    	; 0x2c6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c1       	rjmp	.+656    	; 0x2c6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c1       	rjmp	.+652    	; 0x2c6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c1       	rjmp	.+648    	; 0x2c6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	11 c2       	rjmp	.+1058   	; 0x464 <__vector_16>
  42:	00 00       	nop
  44:	40 c1       	rjmp	.+640    	; 0x2c6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c1       	rjmp	.+636    	; 0x2c6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c1       	rjmp	.+632    	; 0x2c6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c1       	rjmp	.+628    	; 0x2c6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c1       	rjmp	.+624    	; 0x2c6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c1       	rjmp	.+620    	; 0x2c6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c1       	rjmp	.+616    	; 0x2c6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c1       	rjmp	.+612    	; 0x2c6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c1       	rjmp	.+608    	; 0x2c6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c1       	rjmp	.+604    	; 0x2c6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c1       	rjmp	.+600    	; 0x2c6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c1       	rjmp	.+596    	; 0x2c6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c1       	rjmp	.+592    	; 0x2c6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c1       	rjmp	.+588    	; 0x2c6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c1       	rjmp	.+584    	; 0x2c6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c1       	rjmp	.+580    	; 0x2c6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c1       	rjmp	.+576    	; 0x2c6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c1       	rjmp	.+572    	; 0x2c6 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
  8c:	3d 00       	.word	0x003d	; ????
	...
  aa:	00 00       	nop
  ac:	47 00       	.word	0x0047	; ????
	...
  ca:	00 00       	nop
  cc:	3c 00       	.word	0x003c	; ????
	...
  ea:	00 00       	nop
  ec:	45 00       	.word	0x0045	; ????
	...
 16a:	00 00       	nop
 16c:	43 00       	.word	0x0043	; ????
 16e:	41 00       	.word	0x0041	; ????
 170:	00 00       	nop
 172:	40 00       	.word	0x0040	; ????
 174:	00 00       	nop
 176:	00 00       	nop
 178:	00 00       	nop
 17a:	3e 00       	.word	0x003e	; ????
	...
 188:	00 00       	nop
 18a:	3c 00       	.word	0x003c	; ????
	...
 1ac:	47 00       	.word	0x0047	; ????
	...
 1ca:	00 00       	nop
 1cc:	3d 00       	.word	0x003d	; ????
	...
 1ea:	00 00       	nop
 1ec:	46 00       	.word	0x0046	; ????
	...
 26a:	00 00       	nop
 26c:	44 00       	.word	0x0044	; ????
 26e:	42 00       	.word	0x0042	; ????
	...
 278:	00 00       	nop
 27a:	3f 00       	.word	0x003f	; ????
	...
 288:	00 00       	nop
 28a:	3d 00       	.word	0x003d	; ????

0000028c <__ctors_end>:
 28c:	11 24       	eor	r1, r1
 28e:	1f be       	out	0x3f, r1	; 63
 290:	cf ef       	ldi	r28, 0xFF	; 255
 292:	d0 e4       	ldi	r29, 0x40	; 64
 294:	de bf       	out	0x3e, r29	; 62
 296:	cd bf       	out	0x3d, r28	; 61

00000298 <__do_copy_data>:
 298:	12 e0       	ldi	r17, 0x02	; 2
 29a:	a0 e0       	ldi	r26, 0x00	; 0
 29c:	b1 e0       	ldi	r27, 0x01	; 1
 29e:	ee eb       	ldi	r30, 0xBE	; 190
 2a0:	ff e0       	ldi	r31, 0x0F	; 15
 2a2:	00 e0       	ldi	r16, 0x00	; 0
 2a4:	0b bf       	out	0x3b, r16	; 59
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__do_copy_data+0x14>
 2a8:	07 90       	elpm	r0, Z+
 2aa:	0d 92       	st	X+, r0
 2ac:	a8 33       	cpi	r26, 0x38	; 56
 2ae:	b1 07       	cpc	r27, r17
 2b0:	d9 f7       	brne	.-10     	; 0x2a8 <__do_copy_data+0x10>

000002b2 <__do_clear_bss>:
 2b2:	22 e0       	ldi	r18, 0x02	; 2
 2b4:	a8 e3       	ldi	r26, 0x38	; 56
 2b6:	b2 e0       	ldi	r27, 0x02	; 2
 2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
 2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
 2bc:	ae 33       	cpi	r26, 0x3E	; 62
 2be:	b2 07       	cpc	r27, r18
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
 2c2:	11 d1       	rcall	.+546    	; 0x4e6 <main>
 2c4:	7a c6       	rjmp	.+3316   	; 0xfba <_exit>

000002c6 <__bad_interrupt>:
 2c6:	9c ce       	rjmp	.-712    	; 0x0 <__vectors>

000002c8 <_Z7i2cInitv>:
}

void i2cStop(void)
{
	/* I2C停止条件発行 */
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
 2c8:	82 e0       	ldi	r24, 0x02	; 2
 2ca:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 2ce:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 2d2:	84 e0       	ldi	r24, 0x04	; 4
 2d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2d8:	08 95       	ret

000002da <_Z8i2cStartv>:
 2da:	84 ea       	ldi	r24, 0xA4	; 164
 2dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2e0:	ec eb       	ldi	r30, 0xBC	; 188
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	80 81       	ld	r24, Z
 2e6:	88 23       	and	r24, r24
 2e8:	ec f7       	brge	.-6      	; 0x2e4 <_Z8i2cStartv+0xa>
 2ea:	08 95       	ret

000002ec <_Z8i2cWritei>:
}

void i2cWrite(int data)
{
	/* 送信データ */
	TWDR = data;
 2ec:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	/* 送信開始 */
	TWCR = (1<<TWINT)|(1<<TWEN);
 2f0:	84 e8       	ldi	r24, 0x84	; 132
 2f2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	/* 完了待ち */
	while(!(TWCR & 1<<TWINT));
 2f6:	ec eb       	ldi	r30, 0xBC	; 188
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	88 23       	and	r24, r24
 2fe:	ec f7       	brge	.-6      	; 0x2fa <_Z8i2cWritei+0xe>
}
 300:	08 95       	ret

00000302 <_Z7i2cReadi>:

int i2cRead(int i)
{
	if(i==0)//ACK　続けて読み込み
 302:	89 2b       	or	r24, r25
 304:	31 f4       	brne	.+12     	; 0x312 <_Z7i2cReadi+0x10>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
 306:	84 ec       	ldi	r24, 0xC4	; 196
 308:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	}
	else//NOACK 読み込み最後
	{
		TWCR = (1<<TWINT)|(1<<TWEN);
	}
	while(!(TWCR & 1<<TWINT)){}
 30c:	ec eb       	ldi	r30, 0xBC	; 188
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	04 c0       	rjmp	.+8      	; 0x31a <_Z7i2cReadi+0x18>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
	}
	else//NOACK 読み込み最後
	{
		TWCR = (1<<TWINT)|(1<<TWEN);
 312:	84 e8       	ldi	r24, 0x84	; 132
 314:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 318:	f9 cf       	rjmp	.-14     	; 0x30c <_Z7i2cReadi+0xa>
	}
	while(!(TWCR & 1<<TWINT)){}
 31a:	80 81       	ld	r24, Z
 31c:	88 23       	and	r24, r24
 31e:	ec f7       	brge	.-6      	; 0x31a <_Z7i2cReadi+0x18>
	return TWDR;
 320:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	08 95       	ret

00000328 <_Z10i2cRegReadhh>:

int i2cRegRead(uint8_t addr,uint8_t reg)
{
 328:	1f 93       	push	r17
 32a:	cf 93       	push	r28
 32c:	df 93       	push	r29
 32e:	c8 2f       	mov	r28, r24
 330:	16 2f       	mov	r17, r22
	uint8_t i2c_data;
	/* i2c開始・スレーブアドレス送信・レジスタアドレス送信 */
	i2cInit();
 332:	ca df       	rcall	.-108    	; 0x2c8 <_Z7i2cInitv>
	i2cStart();
 334:	d2 df       	rcall	.-92     	; 0x2da <_Z8i2cStartv>
 336:	d0 e0       	ldi	r29, 0x00	; 0
	i2cWrite( (addr<<1)+0 ); /* スレーブアドレス送信(RW=0) */
 338:	cc 0f       	add	r28, r28
 33a:	dd 1f       	adc	r29, r29
 33c:	ce 01       	movw	r24, r28
 33e:	d6 df       	rcall	.-84     	; 0x2ec <_Z8i2cWritei>
 340:	81 2f       	mov	r24, r17
	i2cWrite(reg);  /* レジスタアドレス書き込み */
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	d3 df       	rcall	.-90     	; 0x2ec <_Z8i2cWritei>
 346:	c9 df       	rcall	.-110    	; 0x2da <_Z8i2cStartv>
	
	/* スレーブアドレスLSBがR/Wになる！ */
	
	/* レジスタ読み込み・i2c通信終了 */
	i2cStart();
 348:	ce 01       	movw	r24, r28
 34a:	01 96       	adiw	r24, 0x01	; 1
	i2cWrite( (addr<<1)+1 ); /* スレーブアドレス送信(RW=1) */
 34c:	cf df       	rcall	.-98     	; 0x2ec <_Z8i2cWritei>
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
	i2c_data = i2cRead(1);  /* レジスタ読み込み */
 352:	d7 df       	rcall	.-82     	; 0x302 <_Z7i2cReadi>
 354:	24 e9       	ldi	r18, 0x94	; 148
 356:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
}

void i2cStop(void)
{
	/* I2C停止条件発行 */
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
 35a:	99 27       	eor	r25, r25
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
	i2cWrite( (addr<<1)+1 ); /* スレーブアドレス送信(RW=1) */
	i2c_data = i2cRead(1);  /* レジスタ読み込み */
	i2cStop();
	
	return i2c_data;
}
 360:	1f 91       	pop	r17
 362:	08 95       	ret

00000364 <_Z11i2cRegWritehhh>:
 364:	1f 93       	push	r17
 366:	cf 93       	push	r28
 368:	df 93       	push	r29

void i2cRegWrite(uint8_t addr, uint8_t reg, uint8_t data){
 36a:	c8 2f       	mov	r28, r24
 36c:	16 2f       	mov	r17, r22
 36e:	d4 2f       	mov	r29, r20
	/* i2c開始・スレーブアドレス送信・レジスタアドレス送信 */
	i2cInit();
 370:	ab df       	rcall	.-170    	; 0x2c8 <_Z7i2cInitv>
	i2cStart();
 372:	b3 df       	rcall	.-154    	; 0x2da <_Z8i2cStartv>
 374:	8c 2f       	mov	r24, r28
	i2cWrite( (addr<<1)+0 ); /* スレーブアドレス送信(RW=0) */
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	88 0f       	add	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	b7 df       	rcall	.-146    	; 0x2ec <_Z8i2cWritei>
 37e:	81 2f       	mov	r24, r17
	i2cWrite(reg);  /* レジスタアドレス書き込み */
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	b4 df       	rcall	.-152    	; 0x2ec <_Z8i2cWritei>
 384:	8d 2f       	mov	r24, r29
	i2cWrite(data);		/* レジスタ書き込み */
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	b1 df       	rcall	.-158    	; 0x2ec <_Z8i2cWritei>
 38a:	84 e9       	ldi	r24, 0x94	; 148
 38c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
}

void i2cStop(void)
{
	/* I2C停止条件発行 */
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
 390:	df 91       	pop	r29
 392:	cf 91       	pop	r28
	i2cStart();
	i2cWrite( (addr<<1)+0 ); /* スレーブアドレス送信(RW=0) */
	i2cWrite(reg);  /* レジスタアドレス書き込み */
	i2cWrite(data);		/* レジスタ書き込み */
	i2cStop();
}
 394:	1f 91       	pop	r17
 396:	08 95       	ret

00000398 <_Z10breathReadv>:
 398:	cf 93       	push	r28
 39a:	df 93       	push	r29

/* ブレスセンサ気圧値取得 */
uint32_t breathRead(){
	uint32_t breath;
	uint8_t pll, pl, ph;
	pll = i2cRegRead(LPS22_ADDR, LPS22_PLL);
 39c:	68 e2       	ldi	r22, 0x28	; 40
 39e:	8c e5       	ldi	r24, 0x5C	; 92
 3a0:	c3 df       	rcall	.-122    	; 0x328 <_Z10i2cRegReadhh>
 3a2:	c8 2f       	mov	r28, r24
	pl  = i2cRegRead(LPS22_ADDR, LPS22_PL);
 3a4:	69 e2       	ldi	r22, 0x29	; 41
 3a6:	8c e5       	ldi	r24, 0x5C	; 92
 3a8:	bf df       	rcall	.-130    	; 0x328 <_Z10i2cRegReadhh>
 3aa:	d8 2f       	mov	r29, r24
	ph  = i2cRegRead(LPS22_ADDR, LPS22_PH);
 3ac:	6a e2       	ldi	r22, 0x2A	; 42
 3ae:	8c e5       	ldi	r24, 0x5C	; 92
 3b0:	bb df       	rcall	.-138    	; 0x328 <_Z10i2cRegReadhh>
	
	breath   = ph;
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	a0 e0       	ldi	r26, 0x00	; 0
 3b6:	b0 e0       	ldi	r27, 0x00	; 0
	breath <<= 8;
 3b8:	ba 2f       	mov	r27, r26
 3ba:	a9 2f       	mov	r26, r25
 3bc:	98 2f       	mov	r25, r24
 3be:	88 27       	eor	r24, r24
	breath  += pl;
 3c0:	8d 0f       	add	r24, r29
 3c2:	91 1d       	adc	r25, r1
 3c4:	a1 1d       	adc	r26, r1
 3c6:	b1 1d       	adc	r27, r1
	breath <<= 8;
 3c8:	ba 2f       	mov	r27, r26
 3ca:	a9 2f       	mov	r26, r25
 3cc:	98 2f       	mov	r25, r24
 3ce:	88 27       	eor	r24, r24
	breath  += pll;
	
	return breath;
 3d0:	bc 01       	movw	r22, r24
 3d2:	cd 01       	movw	r24, r26
 3d4:	6c 0f       	add	r22, r28
 3d6:	71 1d       	adc	r23, r1
 3d8:	81 1d       	adc	r24, r1
 3da:	91 1d       	adc	r25, r1
}
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	08 95       	ret

000003e2 <_Z10breathInitv>:

/* ブレスセンサ初期化 */
void breathInit(){
	i2cRegWrite(LPS22_ADDR, LPS22_CTR1,
				0b01010000);
 3e2:	40 e5       	ldi	r20, 0x50	; 80
 3e4:	60 e1       	ldi	r22, 0x10	; 16
 3e6:	8c e5       	ldi	r24, 0x5C	; 92
 3e8:	bd cf       	rjmp	.-134    	; 0x364 <_Z11i2cRegWritehhh>
 3ea:	08 95       	ret

000003ec <_Z15setBreathOffsetv>:
				  +-------- "0"
	*/
}

void setBreathOffset(){
	offset = breathRead();
 3ec:	d5 df       	rcall	.-86     	; 0x398 <_Z10breathReadv>
 3ee:	60 93 38 02 	sts	0x0238, r22	; 0x800238 <__data_end>
 3f2:	70 93 39 02 	sts	0x0239, r23	; 0x800239 <__data_end+0x1>
 3f6:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <__data_end+0x2>
 3fa:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <__data_end+0x3>
 3fe:	08 95       	ret

00000400 <_Z20getBreathOffsetValuev>:
}

long getBreathOffsetValue(){
 400:	0f 93       	push	r16
 402:	1f 93       	push	r17
	uint32_t enOfstBreath;
	enOfstBreath = breathRead() - offset;
 404:	c9 df       	rcall	.-110    	; 0x398 <_Z10breathReadv>
	return enOfstBreath;
 406:	00 91 38 02 	lds	r16, 0x0238	; 0x800238 <__data_end>
 40a:	10 91 39 02 	lds	r17, 0x0239	; 0x800239 <__data_end+0x1>
 40e:	20 91 3a 02 	lds	r18, 0x023A	; 0x80023a <__data_end+0x2>
 412:	30 91 3b 02 	lds	r19, 0x023B	; 0x80023b <__data_end+0x3>
 416:	60 1b       	sub	r22, r16
 418:	71 0b       	sbc	r23, r17
 41a:	82 0b       	sbc	r24, r18
 41c:	93 0b       	sbc	r25, r19
}
 41e:	1f 91       	pop	r17
 420:	0f 91       	pop	r16
 422:	08 95       	ret

00000424 <_Z16breathToVelocityl>:

/* オフセット済みブレス値(0〜20000)⇒ベロシティ値(0~127) */
uint8_t breathToVelocity(long brth_lv){
	uint8_t velocity;
	/* 範囲外の場合の処理 */
	if(brth_lv < 0){
 424:	99 23       	and	r25, r25
 426:	6c f0       	brlt	.+26     	; 0x442 <_Z16breathToVelocityl+0x1e>
		velocity = 0;
	}else if(brth_lv > 12700){
 428:	6d 39       	cpi	r22, 0x9D	; 157
 42a:	21 e3       	ldi	r18, 0x31	; 49
 42c:	72 07       	cpc	r23, r18
 42e:	81 05       	cpc	r24, r1
 430:	91 05       	cpc	r25, r1
 432:	4c f4       	brge	.+18     	; 0x446 <_Z16breathToVelocityl+0x22>
		velocity = 127;
	}else{
		velocity = brth_lv / 100;
 434:	24 e6       	ldi	r18, 0x64	; 100
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	40 e0       	ldi	r20, 0x00	; 0
 43a:	50 e0       	ldi	r21, 0x00	; 0
 43c:	96 d2       	rcall	.+1324   	; 0x96a <__divmodsi4>
 43e:	82 2f       	mov	r24, r18
 440:	08 95       	ret
/* オフセット済みブレス値(0〜20000)⇒ベロシティ値(0~127) */
uint8_t breathToVelocity(long brth_lv){
	uint8_t velocity;
	/* 範囲外の場合の処理 */
	if(brth_lv < 0){
		velocity = 0;
 442:	80 e0       	ldi	r24, 0x00	; 0
 444:	08 95       	ret
	}else if(brth_lv > 12700){
		velocity = 127;
 446:	8f e7       	ldi	r24, 0x7F	; 127
	}else{
		velocity = brth_lv / 100;
	}
	return velocity;
}
 448:	08 95       	ret

0000044a <_Z13breathToVovoll>:

uint8_t breathToVovol(long brth_lv){
	return breathToVelocity(brth_lv)/4;
 44a:	ec df       	rcall	.-40     	; 0x424 <_Z16breathToVelocityl>
}
 44c:	86 95       	lsr	r24
 44e:	86 95       	lsr	r24
 450:	08 95       	ret

00000452 <_Z15fingerToNoteNumh>:
#include "Finger.h"

uint16_t fingerToNoteNum(uint8_t finger){
	uint16_t noteNum;
	//noteNum = FINGER_TBL[fingerI];
	noteNum = pgm_read_word(&FINGER_TBL[finger]);
 452:	e8 2f       	mov	r30, r24
 454:	f0 e0       	ldi	r31, 0x00	; 0
 456:	ee 0f       	add	r30, r30
 458:	ff 1f       	adc	r31, r31
 45a:	e4 57       	subi	r30, 0x74	; 116
 45c:	ff 4f       	sbci	r31, 0xFF	; 255
 45e:	85 91       	lpm	r24, Z+
 460:	94 91       	lpm	r25, Z
	/* PROGMEMﾃｰﾌﾞﾙ参照時は，?の関数を読んで読み出す！！
	   配列として読むと変な値が出るので注意する！ */
	return noteNum;
}
 462:	08 95       	ret

00000464 <__vector_16>:
void ctrlLed(uint8_t state){
	uint8_t reg;
	reg = PORTB;
	reg &= 0b11001111;
	reg |= state << 5;
	PORTB = reg;
 464:	1f 92       	push	r1
 466:	0f 92       	push	r0
 468:	0f b6       	in	r0, 0x3f	; 63
 46a:	0f 92       	push	r0
 46c:	11 24       	eor	r1, r1
 46e:	8f 93       	push	r24
 470:	9f 93       	push	r25
 472:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <cnt>
 476:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <cnt+0x1>
 47a:	01 96       	adiw	r24, 0x01	; 1
 47c:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <cnt+0x1>
 480:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <cnt>
 484:	9f 91       	pop	r25
 486:	8f 91       	pop	r24
 488:	0f 90       	pop	r0
 48a:	0f be       	out	0x3f, r0	; 63
 48c:	0f 90       	pop	r0
 48e:	1f 90       	pop	r1
 490:	18 95       	reti

00000492 <_Z9setIOModev>:
 492:	25 9a       	sbi	0x04, 5	; 4
 494:	08 95       	ret

00000496 <_Z8uartInitv>:
}

void uartInit(void){
	UCSR0B = (1<<TXEN0) | (1<<RXEN0);
 496:	88 e1       	ldi	r24, 0x18	; 24
 498:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UBRR0H = (F_CPU/16/BAUD-1)>>8;
 49c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (F_CPU/16/BAUD-1);
 4a0:	87 e6       	ldi	r24, 0x67	; 103
 4a2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 4a6:	08 95       	ret

000004a8 <_Z8uartPutcc>:
}

void uartPutc(char a){
	while(!(UCSR0A&0b00100000));
 4a8:	e0 ec       	ldi	r30, 0xC0	; 192
 4aa:	f0 e0       	ldi	r31, 0x00	; 0
 4ac:	90 81       	ld	r25, Z
 4ae:	95 ff       	sbrs	r25, 5
 4b0:	fd cf       	rjmp	.-6      	; 0x4ac <_Z8uartPutcc+0x4>
	UDR0 = a;
 4b2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 4b6:	08 95       	ret

000004b8 <_Z8uartPutsPc>:
}

void uartPuts(char * str){
 4b8:	cf 93       	push	r28
 4ba:	df 93       	push	r29
 4bc:	ec 01       	movw	r28, r24
	while(*str != '\0'){
 4be:	88 81       	ld	r24, Y
 4c0:	88 23       	and	r24, r24
 4c2:	29 f0       	breq	.+10     	; 0x4ce <_Z8uartPutsPc+0x16>
 4c4:	21 96       	adiw	r28, 0x01	; 1
		uartPutc(*str);
 4c6:	f0 df       	rcall	.-32     	; 0x4a8 <_Z8uartPutcc>
	while(!(UCSR0A&0b00100000));
	UDR0 = a;
}

void uartPuts(char * str){
	while(*str != '\0'){
 4c8:	89 91       	ld	r24, Y+
 4ca:	81 11       	cpse	r24, r1
 4cc:	fc cf       	rjmp	.-8      	; 0x4c6 <_Z8uartPutsPc+0xe>
		uartPutc(*str);
		str++;
	}
}
 4ce:	df 91       	pop	r29
 4d0:	cf 91       	pop	r28
 4d2:	08 95       	ret

000004d4 <_Z9initTimerv>:

void initTimer(void)
{
	/* Timer0: 8bitタイマ設定 */
	TCCR0A = 0b00000010; /* タイマ制御レジスタＡ */
 4d4:	82 e0       	ldi	r24, 0x02	; 2
 4d6:	84 bd       	out	0x24, r24	; 36
	
	/* CTC動作！ */
	TCCR0B = 0b00000101; /* タイマ制御レジスタＢ */
 4d8:	95 e0       	ldi	r25, 0x05	; 5
 4da:	95 bd       	out	0x25, r25	; 37
                    |+-- CS01 101 : 1024分周 
					+--- CS02 16M/1024 = 15.625KHz
					タイマ出力 61.04Hz T=16.384mS
	*/
	
	OCR0A = 255; /* コンペア対象(255の場合 標準動作と同じ) */
 4dc:	9f ef       	ldi	r25, 0xFF	; 255
 4de:	97 bd       	out	0x27, r25	; 39
	
	TIMSK0 = 0b00000010; /* タイマ割込マスクレジスタ */
 4e0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 4e4:	08 95       	ret

000004e6 <main>:
ISR (TIMER0_COMPA_vect){
	cnt++;
}

int main(void)
{
 4e6:	cf 93       	push	r28
 4e8:	df 93       	push	r29
 4ea:	cd b7       	in	r28, 0x3d	; 61
 4ec:	de b7       	in	r29, 0x3e	; 62
 4ee:	c4 56       	subi	r28, 0x64	; 100
 4f0:	d1 09       	sbc	r29, r1
 4f2:	0f b6       	in	r0, 0x3f	; 63
 4f4:	f8 94       	cli
 4f6:	de bf       	out	0x3e, r29	; 62
 4f8:	0f be       	out	0x3f, r0	; 63
 4fa:	cd bf       	out	0x3d, r28	; 61
	uint32_t data;
	long bdata;
	uint8_t keyval;
	uint16_t noteNum;
	
	spiInit();
 4fc:	d2 d0       	rcall	.+420    	; 0x6a2 <_Z7spiInitv>
	spiCtrlCs(DISABLE);
 4fe:	80 e0       	ldi	r24, 0x00	; 0
	
	setIOMode();
 500:	dc d0       	rcall	.+440    	; 0x6ba <_Z9spiCtrlCsh>
 502:	c7 df       	rcall	.-114    	; 0x492 <_Z9setIOModev>
	uartInit();
 504:	c8 df       	rcall	.-112    	; 0x496 <_Z8uartInitv>
 506:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 508:	81 ee       	ldi	r24, 0xE1	; 225
 50a:	94 e0       	ldi	r25, 0x04	; 4
 50c:	21 50       	subi	r18, 0x01	; 1
 50e:	80 40       	sbci	r24, 0x00	; 0
 510:	90 40       	sbci	r25, 0x00	; 0
 512:	e1 f7       	brne	.-8      	; 0x50c <main+0x26>
 514:	00 c0       	rjmp	.+0      	; 0x516 <main+0x30>
	
	_delay_ms(100);
	
	soundInit();
 516:	00 00       	nop
 518:	12 d1       	rcall	.+548    	; 0x73e <_Z9soundInitv>
	setTone();
 51a:	6c d1       	rcall	.+728    	; 0x7f4 <_Z7setTonev>
 51c:	b4 d1       	rcall	.+872    	; 0x886 <_Z5setChv>
	setCh();
 51e:	2f ef       	ldi	r18, 0xFF	; 255
 520:	81 ee       	ldi	r24, 0xE1	; 225
 522:	94 e0       	ldi	r25, 0x04	; 4
 524:	21 50       	subi	r18, 0x01	; 1
 526:	80 40       	sbci	r24, 0x00	; 0
 528:	90 40       	sbci	r25, 0x00	; 0
 52a:	e1 f7       	brne	.-8      	; 0x524 <main+0x3e>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <main+0x48>
 52e:	00 00       	nop
 530:	8b e3       	ldi	r24, 0x3B	; 59
 532:	91 e0       	ldi	r25, 0x01	; 1
	
	_delay_ms(100);
	sprintf(str, "***      YWinth Serial Console      ***\nFirmware version: %s\n", VERSIONCODE);
 534:	9f 93       	push	r25
 536:	8f 93       	push	r24
 538:	81 e4       	ldi	r24, 0x41	; 65
 53a:	91 e0       	ldi	r25, 0x01	; 1
 53c:	9f 93       	push	r25
 53e:	8f 93       	push	r24
 540:	8e 01       	movw	r16, r28
 542:	0f 5f       	subi	r16, 0xFF	; 255
 544:	1f 4f       	sbci	r17, 0xFF	; 255
 546:	1f 93       	push	r17
 548:	0f 93       	push	r16
 54a:	5c d2       	rcall	.+1208   	; 0xa04 <sprintf>
	uartPuts(str);
 54c:	c8 01       	movw	r24, r16
 54e:	b4 df       	rcall	.-152    	; 0x4b8 <_Z8uartPutsPc>
	uartPuts("4 Operator FM Sound Wind Synthesizer.\n");
 550:	8f e7       	ldi	r24, 0x7F	; 127
 552:	91 e0       	ldi	r25, 0x01	; 1
 554:	b1 df       	rcall	.-158    	; 0x4b8 <_Z8uartPutsPc>
	uartPuts("Designed by K.Yazawa.\n");
 556:	86 ea       	ldi	r24, 0xA6	; 166
 558:	91 e0       	ldi	r25, 0x01	; 1
 55a:	ae df       	rcall	.-164    	; 0x4b8 <_Z8uartPutsPc>
	uartPuts("This is Serial Console.\n");
 55c:	8d eb       	ldi	r24, 0xBD	; 189
 55e:	91 e0       	ldi	r25, 0x01	; 1
 560:	ab df       	rcall	.-170    	; 0x4b8 <_Z8uartPutsPc>
	uartPuts("Please input command.\n");
 562:	86 ed       	ldi	r24, 0xD6	; 214
 564:	91 e0       	ldi	r25, 0x01	; 1
 566:	a8 df       	rcall	.-176    	; 0x4b8 <_Z8uartPutsPc>
 568:	b5 df       	rcall	.-150    	; 0x4d4 <_Z9initTimerv>
	
    /* Replace with your application code */
	//_delay_ms(1000);
	initTimer();
 56a:	3b df       	rcall	.-394    	; 0x3e2 <_Z10breathInitv>
 56c:	78 94       	sei
	breathInit();
 56e:	6f e0       	ldi	r22, 0x0F	; 15
 570:	8c e5       	ldi	r24, 0x5C	; 92
	sei();
 572:	da de       	rcall	.-588    	; 0x328 <_Z10i2cRegReadhh>
	
	data = i2cRegRead(0b1011100, LPS22_WAMI); //whoami読み込み
 574:	09 2e       	mov	r0, r25
 576:	00 0c       	add	r0, r0
 578:	aa 0b       	sbc	r26, r26
	sprintf(str, "lps22_whoami:%x\n", data);
 57a:	bb 0b       	sbc	r27, r27
 57c:	bf 93       	push	r27
 57e:	af 93       	push	r26
 580:	9f 93       	push	r25
 582:	8f 93       	push	r24
 584:	8d ee       	ldi	r24, 0xED	; 237
 586:	91 e0       	ldi	r25, 0x01	; 1
 588:	9f 93       	push	r25
 58a:	8f 93       	push	r24
 58c:	1f 93       	push	r17
 58e:	0f 93       	push	r16
 590:	39 d2       	rcall	.+1138   	; 0xa04 <sprintf>
 592:	c8 01       	movw	r24, r16
 594:	91 df       	rcall	.-222    	; 0x4b8 <_Z8uartPutsPc>
	uartPuts(str);
 596:	2f ef       	ldi	r18, 0xFF	; 255
 598:	83 ed       	ldi	r24, 0xD3	; 211
 59a:	90 e3       	ldi	r25, 0x30	; 48
 59c:	21 50       	subi	r18, 0x01	; 1
 59e:	80 40       	sbci	r24, 0x00	; 0
 5a0:	90 40       	sbci	r25, 0x00	; 0
 5a2:	e1 f7       	brne	.-8      	; 0x59c <main+0xb6>
 5a4:	00 c0       	rjmp	.+0      	; 0x5a6 <main+0xc0>
 5a6:	00 00       	nop
 5a8:	21 df       	rcall	.-446    	; 0x3ec <_Z15setBreathOffsetv>
 5aa:	0f b6       	in	r0, 0x3f	; 63
 5ac:	f8 94       	cli
	
	_delay_ms(1000);
	setBreathOffset();
 5ae:	de bf       	out	0x3e, r29	; 62
 5b0:	0f be       	out	0x3f, r0	; 63
 5b2:	cd bf       	out	0x3d, r28	; 61
 5b4:	00 e0       	ldi	r16, 0x00	; 0
 5b6:	10 e0       	ldi	r17, 0x00	; 0
 5b8:	0f 2e       	mov	r0, r31
	
	for(int i=0; i<256; i++){
 5ba:	fe ef       	ldi	r31, 0xFE	; 254
 5bc:	cf 2e       	mov	r12, r31
		sprintf(str, "%d %u\n", i, fingerToNoteNum(i));
 5be:	f1 e0       	ldi	r31, 0x01	; 1
 5c0:	df 2e       	mov	r13, r31
 5c2:	f0 2d       	mov	r31, r0
 5c4:	ce 01       	movw	r24, r28
 5c6:	01 96       	adiw	r24, 0x01	; 1
 5c8:	7c 01       	movw	r14, r24
 5ca:	80 2f       	mov	r24, r16
 5cc:	42 df       	rcall	.-380    	; 0x452 <_Z15fingerToNoteNumh>
 5ce:	9f 93       	push	r25
 5d0:	8f 93       	push	r24
 5d2:	1f 93       	push	r17
 5d4:	0f 93       	push	r16
 5d6:	df 92       	push	r13
 5d8:	cf 92       	push	r12
 5da:	ff 92       	push	r15
 5dc:	ef 92       	push	r14
 5de:	12 d2       	rcall	.+1060   	; 0xa04 <sprintf>
 5e0:	c7 01       	movw	r24, r14
 5e2:	6a df       	rcall	.-300    	; 0x4b8 <_Z8uartPutsPc>
 5e4:	0f 5f       	subi	r16, 0xFF	; 255
		uartPuts(str);
 5e6:	1f 4f       	sbci	r17, 0xFF	; 255
 5e8:	0f b6       	in	r0, 0x3f	; 63
 5ea:	f8 94       	cli
	uartPuts(str);
	
	_delay_ms(1000);
	setBreathOffset();
	
	for(int i=0; i<256; i++){
 5ec:	de bf       	out	0x3e, r29	; 62
 5ee:	0f be       	out	0x3f, r0	; 63
 5f0:	cd bf       	out	0x3d, r28	; 61
 5f2:	01 15       	cp	r16, r1
 5f4:	91 e0       	ldi	r25, 0x01	; 1
 5f6:	19 07       	cpc	r17, r25
 5f8:	41 f7       	brne	.-48     	; 0x5ca <main+0xe4>
 5fa:	0f 2e       	mov	r0, r31
 5fc:	f5 e0       	ldi	r31, 0x05	; 5
 5fe:	8f 2e       	mov	r8, r31
	}
	
	while(1){
		
		bdata = getBreathOffsetValue();
		sprintf(str, "lps22:%d", bdata);
 600:	f2 e0       	ldi	r31, 0x02	; 2
 602:	9f 2e       	mov	r9, r31
 604:	f0 2d       	mov	r31, r0
 606:	8e 01       	movw	r16, r28
 608:	0f 5f       	subi	r16, 0xFF	; 255
 60a:	1f 4f       	sbci	r17, 0xFF	; 255
 60c:	0f 2e       	mov	r0, r31
 60e:	fe e0       	ldi	r31, 0x0E	; 14
 610:	af 2e       	mov	r10, r31
		//uartPuts(str);
		data = breathToVovol(bdata);
		sprintf(str, " vovol:%d\n", data);
 612:	f2 e0       	ldi	r31, 0x02	; 2
 614:	bf 2e       	mov	r11, r31
 616:	f0 2d       	mov	r31, r0
 618:	0f 2e       	mov	r0, r31
 61a:	f9 e1       	ldi	r31, 0x19	; 25
		
		keyval = touchGet();
		noteNum = fingerToNoteNum(keyval);
		keyOnNoteNoWithVovol(noteNum, data);
		
		sprintf(str, "KeyVal=%d NoteNum:%d Vovol:%d\n", keyval, noteNum, data);
 61c:	cf 2e       	mov	r12, r31
 61e:	f2 e0       	ldi	r31, 0x02	; 2
 620:	df 2e       	mov	r13, r31
 622:	f0 2d       	mov	r31, r0
 624:	ed de       	rcall	.-550    	; 0x400 <_Z20getBreathOffsetValuev>
		uartPuts(str);
	}
	
	while(1){
		
		bdata = getBreathOffsetValue();
 626:	66 2e       	mov	r6, r22
 628:	77 2e       	mov	r7, r23
 62a:	e8 2e       	mov	r14, r24
 62c:	f9 2e       	mov	r15, r25
 62e:	9f 93       	push	r25
 630:	8f 93       	push	r24
		sprintf(str, "lps22:%d", bdata);
 632:	7f 93       	push	r23
 634:	6f 93       	push	r22
 636:	9f 92       	push	r9
 638:	8f 92       	push	r8
 63a:	1f 93       	push	r17
 63c:	0f 93       	push	r16
 63e:	e2 d1       	rcall	.+964    	; 0xa04 <sprintf>
		//uartPuts(str);
		data = breathToVovol(bdata);
 640:	66 2d       	mov	r22, r6
 642:	77 2d       	mov	r23, r7
 644:	8e 2d       	mov	r24, r14
 646:	9f 2d       	mov	r25, r15
 648:	00 df       	rcall	.-512    	; 0x44a <_Z13breathToVovoll>
 64a:	f8 2e       	mov	r15, r24
 64c:	1f 92       	push	r1
		sprintf(str, " vovol:%d\n", data);
 64e:	1f 92       	push	r1
 650:	1f 92       	push	r1
 652:	8f 93       	push	r24
 654:	bf 92       	push	r11
 656:	af 92       	push	r10
 658:	1f 93       	push	r17
 65a:	0f 93       	push	r16
 65c:	d3 d1       	rcall	.+934    	; 0xa04 <sprintf>
		//uartPuts(str);
		
		keyval = touchGet();
 65e:	60 d0       	rcall	.+192    	; 0x720 <_Z8touchGetv>
 660:	e8 2e       	mov	r14, r24
 662:	f7 de       	rcall	.-530    	; 0x452 <_Z15fingerToNoteNumh>
		noteNum = fingerToNoteNum(keyval);
 664:	78 2e       	mov	r7, r24
 666:	69 2e       	mov	r6, r25
 668:	6f 2d       	mov	r22, r15
 66a:	5b d1       	rcall	.+694    	; 0x922 <_Z20keyOnNoteNoWithVovoljh>
		keyOnNoteNoWithVovol(noteNum, data);
 66c:	1f 92       	push	r1
 66e:	1f 92       	push	r1
 670:	1f 92       	push	r1
		
		sprintf(str, "KeyVal=%d NoteNum:%d Vovol:%d\n", keyval, noteNum, data);
 672:	ff 92       	push	r15
 674:	6f 92       	push	r6
 676:	7f 92       	push	r7
 678:	1f 92       	push	r1
 67a:	ef 92       	push	r14
 67c:	df 92       	push	r13
 67e:	cf 92       	push	r12
 680:	1f 93       	push	r17
 682:	0f 93       	push	r16
 684:	bf d1       	rcall	.+894    	; 0xa04 <sprintf>
 686:	c8 01       	movw	r24, r16
 688:	17 df       	rcall	.-466    	; 0x4b8 <_Z8uartPutsPc>
 68a:	8f e9       	ldi	r24, 0x9F	; 159
 68c:	9f e0       	ldi	r25, 0x0F	; 15
		uartPuts(str);
 68e:	01 97       	sbiw	r24, 0x01	; 1
 690:	f1 f7       	brne	.-4      	; 0x68e <main+0x1a8>
 692:	00 c0       	rjmp	.+0      	; 0x694 <main+0x1ae>
 694:	00 00       	nop
 696:	0f b6       	in	r0, 0x3f	; 63
 698:	f8 94       	cli
 69a:	de bf       	out	0x3e, r29	; 62
 69c:	0f be       	out	0x3f, r0	; 63
 69e:	cd bf       	out	0x3d, r28	; 61
 6a0:	c1 cf       	rjmp	.-126    	; 0x624 <main+0x13e>

000006a2 <_Z7spiInitv>:
 6a2:	8c b5       	in	r24, 0x2c	; 44
 6a4:	81 65       	ori	r24, 0x51	; 81
 6a6:	8c bd       	out	0x2c, r24	; 44
 6a8:	84 b1       	in	r24, 0x04	; 4
 6aa:	80 6b       	ori	r24, 0xB0	; 176
void spiSend(uint8_t data){
	SPDR = data; /* SPIデータレジスタに書き込んで送信開始 */
	while((SPSR & (1<<SPIF)) == 0); /* 送信完了待ち */
}

void spiRead(){
 6ac:	84 b9       	out	0x04, r24	; 4
 6ae:	08 95       	ret

000006b0 <_Z7spiSendh>:
 6b0:	8e bd       	out	0x2e, r24	; 46
 6b2:	0d b4       	in	r0, 0x2d	; 45
 6b4:	07 fe       	sbrs	r0, 7
 6b6:	fd cf       	rjmp	.-6      	; 0x6b2 <_Z7spiSendh+0x2>
 6b8:	08 95       	ret

000006ba <_Z9spiCtrlCsh>:
	
}

void spiCtrlCs(uint8_t en){
	
	if(en == DISABLE){
 6ba:	81 11       	cpse	r24, r1
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <_Z9spiCtrlCsh+0x8>
		/* SPI CS=H 無効化 */
		PORTB|= 0b00010000;
 6be:	2c 9a       	sbi	0x05, 4	; 5
 6c0:	08 95       	ret
				  |||||+--- MOSI SPIﾏｽﾀｱｳﾄ    出力
				  ||||+---- SS   SPIｽﾚｰﾌﾞｾﾚｸﾄ 出力
		*/
	}else{
		/* SPI CS=L 有効化 */
		PORTB&= 0b11101111;
 6c2:	2c 98       	cbi	0x05, 4	; 5
 6c4:	08 95       	ret

000006c6 <_Z11spiRegWritehh>:
				  ||||+---- SS   SPIｽﾚｰﾌﾞｾﾚｸﾄ 出力
		*/
	}
}

void spiRegWrite(uint8_t addr, uint8_t data){
 6c6:	cf 93       	push	r28
 6c8:	df 93       	push	r29
 6ca:	d8 2f       	mov	r29, r24
 6cc:	c6 2f       	mov	r28, r22
	spiCtrlCs(ENABLE);
 6ce:	81 e0       	ldi	r24, 0x01	; 1
 6d0:	f4 df       	rcall	.-24     	; 0x6ba <_Z9spiCtrlCsh>
	spiSend(addr);
 6d2:	8d 2f       	mov	r24, r29
 6d4:	ed df       	rcall	.-38     	; 0x6b0 <_Z7spiSendh>
	spiSend(data);
 6d6:	8c 2f       	mov	r24, r28
 6d8:	eb df       	rcall	.-42     	; 0x6b0 <_Z7spiSendh>
	spiCtrlCs(DISABLE);
 6da:	80 e0       	ldi	r24, 0x00	; 0
 6dc:	ee df       	rcall	.-36     	; 0x6ba <_Z9spiCtrlCsh>
 6de:	df 91       	pop	r29
}
 6e0:	cf 91       	pop	r28
 6e2:	08 95       	ret

000006e4 <_Z16spiRegBarstWritehPhh>:
 6e4:	ff 92       	push	r15


void spiRegBarstWrite(uint8_t addr, uint8_t * data, uint8_t dsize){
 6e6:	0f 93       	push	r16
 6e8:	1f 93       	push	r17
 6ea:	cf 93       	push	r28
 6ec:	df 93       	push	r29
 6ee:	c8 2f       	mov	r28, r24
 6f0:	8b 01       	movw	r16, r22
 6f2:	f4 2e       	mov	r15, r20
	spiCtrlCs(ENABLE);
 6f4:	81 e0       	ldi	r24, 0x01	; 1
 6f6:	e1 df       	rcall	.-62     	; 0x6ba <_Z9spiCtrlCsh>
	spiSend(addr);
 6f8:	8c 2f       	mov	r24, r28
 6fa:	da df       	rcall	.-76     	; 0x6b0 <_Z7spiSendh>
	for(int i=0; i<dsize; i++){
 6fc:	ff 20       	and	r15, r15
 6fe:	41 f0       	breq	.+16     	; 0x710 <_Z16spiRegBarstWritehPhh+0x2c>
 700:	e8 01       	movw	r28, r16
 702:	0f 0d       	add	r16, r15
		spiSend(data[i]);
 704:	11 1d       	adc	r17, r1
 706:	89 91       	ld	r24, Y+
 708:	d3 df       	rcall	.-90     	; 0x6b0 <_Z7spiSendh>


void spiRegBarstWrite(uint8_t addr, uint8_t * data, uint8_t dsize){
	spiCtrlCs(ENABLE);
	spiSend(addr);
	for(int i=0; i<dsize; i++){
 70a:	c0 17       	cp	r28, r16
 70c:	d1 07       	cpc	r29, r17
		spiSend(data[i]);
	}
	spiCtrlCs(DISABLE);
 70e:	d9 f7       	brne	.-10     	; 0x706 <_Z16spiRegBarstWritehPhh+0x22>
 710:	80 e0       	ldi	r24, 0x00	; 0
 712:	d3 df       	rcall	.-90     	; 0x6ba <_Z9spiCtrlCsh>
}
 714:	df 91       	pop	r29
 716:	cf 91       	pop	r28
 718:	1f 91       	pop	r17
 71a:	0f 91       	pop	r16
 71c:	ff 90       	pop	r15
 71e:	08 95       	ret

00000720 <_Z8touchGetv>:
		65  /* F */
	};
	uint8_t keyval;
	
	/* L出力（放電） */
	PORTA = 0x00;
 720:	12 b8       	out	0x02, r1	; 2
	DDRA = 0xFF;
 722:	8f ef       	ldi	r24, 0xFF	; 255
 724:	81 b9       	out	0x01, r24	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 726:	8a e1       	ldi	r24, 0x1A	; 26
 728:	8a 95       	dec	r24
 72a:	f1 f7       	brne	.-4      	; 0x728 <_Z8touchGetv+0x8>
 72c:	00 c0       	rjmp	.+0      	; 0x72e <_Z8touchGetv+0xe>
	_delay_us(5);
	DDRA = 0x00;
 72e:	11 b8       	out	0x01, r1	; 1
 730:	8a e6       	ldi	r24, 0x6A	; 106
 732:	8a 95       	dec	r24
 734:	f1 f7       	brne	.-4      	; 0x732 <_Z8touchGetv+0x12>
 736:	00 c0       	rjmp	.+0      	; 0x738 <_Z8touchGetv+0x18>
	
	/* 充電待ち */
	_delay_us(20);
	
	/* 電圧検出 */
	keyval = PINA; /* 0:押されてる 1:押されてない */
 738:	80 b1       	in	r24, 0x00	; 0
	
	if(keyval == 0xFF){
		keyOff();
	}
	#endif
}
 73a:	80 95       	com	r24
 73c:	08 95       	ret

0000073e <_Z9soundInitv>:
	fnuml  = (fnum>>4) & 0b00111000;
	fnumh  =      fnum & 0b01111111;
	fnuml |= block;
	
	keyOn(fnuml, fnumh, 5);
}
 73e:	60 e0       	ldi	r22, 0x00	; 0
 740:	8d e1       	ldi	r24, 0x1D	; 29
 742:	c1 df       	rcall	.-126    	; 0x6c6 <_Z11spiRegWritehh>
 744:	6e e0       	ldi	r22, 0x0E	; 14
 746:	82 e0       	ldi	r24, 0x02	; 2
 748:	be df       	rcall	.-132    	; 0x6c6 <_Z11spiRegWritehh>
 74a:	8f e9       	ldi	r24, 0x9F	; 159
 74c:	9f e0       	ldi	r25, 0x0F	; 15
 74e:	01 97       	sbiw	r24, 0x01	; 1
 750:	f1 f7       	brne	.-4      	; 0x74e <_Z9soundInitv+0x10>
 752:	00 c0       	rjmp	.+0      	; 0x754 <_Z9soundInitv+0x16>
 754:	00 00       	nop
 756:	61 e0       	ldi	r22, 0x01	; 1
 758:	80 e0       	ldi	r24, 0x00	; 0
 75a:	b5 df       	rcall	.-150    	; 0x6c6 <_Z11spiRegWritehh>
 75c:	60 e0       	ldi	r22, 0x00	; 0
 75e:	81 e0       	ldi	r24, 0x01	; 1
 760:	b2 df       	rcall	.-156    	; 0x6c6 <_Z11spiRegWritehh>
 762:	63 ea       	ldi	r22, 0xA3	; 163
 764:	8a e1       	ldi	r24, 0x1A	; 26
 766:	af df       	rcall	.-162    	; 0x6c6 <_Z11spiRegWritehh>
 768:	8f e9       	ldi	r24, 0x9F	; 159
 76a:	9f e0       	ldi	r25, 0x0F	; 15
 76c:	01 97       	sbiw	r24, 0x01	; 1
 76e:	f1 f7       	brne	.-4      	; 0x76c <_Z9soundInitv+0x2e>
 770:	00 c0       	rjmp	.+0      	; 0x772 <_Z9soundInitv+0x34>
 772:	00 00       	nop
 774:	60 e0       	ldi	r22, 0x00	; 0
 776:	8a e1       	ldi	r24, 0x1A	; 26
 778:	a6 df       	rcall	.-180    	; 0x6c6 <_Z11spiRegWritehh>
 77a:	9f ef       	ldi	r25, 0xFF	; 255
 77c:	26 e7       	ldi	r18, 0x76	; 118
 77e:	81 e0       	ldi	r24, 0x01	; 1
 780:	91 50       	subi	r25, 0x01	; 1
 782:	20 40       	sbci	r18, 0x00	; 0
 784:	80 40       	sbci	r24, 0x00	; 0
 786:	e1 f7       	brne	.-8      	; 0x780 <_Z9soundInitv+0x42>
 788:	00 c0       	rjmp	.+0      	; 0x78a <_Z9soundInitv+0x4c>
 78a:	00 00       	nop
 78c:	64 e0       	ldi	r22, 0x04	; 4
 78e:	82 e0       	ldi	r24, 0x02	; 2
 790:	9a df       	rcall	.-204    	; 0x6c6 <_Z11spiRegWritehh>
 792:	8f e9       	ldi	r24, 0x9F	; 159
 794:	9f e0       	ldi	r25, 0x0F	; 15
 796:	01 97       	sbiw	r24, 0x01	; 1
 798:	f1 f7       	brne	.-4      	; 0x796 <_Z9soundInitv+0x58>
 79a:	00 c0       	rjmp	.+0      	; 0x79c <_Z9soundInitv+0x5e>
 79c:	00 00       	nop
 79e:	60 e0       	ldi	r22, 0x00	; 0
 7a0:	82 e0       	ldi	r24, 0x02	; 2
 7a2:	91 df       	rcall	.-222    	; 0x6c6 <_Z11spiRegWritehh>
 7a4:	60 ef       	ldi	r22, 0xF0	; 240
 7a6:	89 e1       	ldi	r24, 0x19	; 25
 7a8:	8e df       	rcall	.-228    	; 0x6c6 <_Z11spiRegWritehh>
 7aa:	6f e3       	ldi	r22, 0x3F	; 63
 7ac:	8b e1       	ldi	r24, 0x1B	; 27
 7ae:	8b df       	rcall	.-234    	; 0x6c6 <_Z11spiRegWritehh>
 7b0:	60 e0       	ldi	r22, 0x00	; 0
 7b2:	84 e1       	ldi	r24, 0x14	; 20
 7b4:	88 df       	rcall	.-240    	; 0x6c6 <_Z11spiRegWritehh>
 7b6:	61 e0       	ldi	r22, 0x01	; 1
 7b8:	83 e0       	ldi	r24, 0x03	; 3
 7ba:	85 df       	rcall	.-246    	; 0x6c6 <_Z11spiRegWritehh>
 7bc:	66 ef       	ldi	r22, 0xF6	; 246
 7be:	88 e0       	ldi	r24, 0x08	; 8
 7c0:	82 df       	rcall	.-252    	; 0x6c6 <_Z11spiRegWritehh>
 7c2:	9f e7       	ldi	r25, 0x7F	; 127
 7c4:	26 e0       	ldi	r18, 0x06	; 6
 7c6:	81 e0       	ldi	r24, 0x01	; 1
 7c8:	91 50       	subi	r25, 0x01	; 1
 7ca:	20 40       	sbci	r18, 0x00	; 0
 7cc:	80 40       	sbci	r24, 0x00	; 0
 7ce:	e1 f7       	brne	.-8      	; 0x7c8 <_Z9soundInitv+0x8a>
 7d0:	00 c0       	rjmp	.+0      	; 0x7d2 <_Z9soundInitv+0x94>
 7d2:	00 00       	nop
 7d4:	60 e0       	ldi	r22, 0x00	; 0
 7d6:	88 e0       	ldi	r24, 0x08	; 8
 7d8:	76 df       	rcall	.-276    	; 0x6c6 <_Z11spiRegWritehh>
 7da:	68 ef       	ldi	r22, 0xF8	; 248
 7dc:	89 e0       	ldi	r24, 0x09	; 9
 7de:	73 df       	rcall	.-282    	; 0x6c6 <_Z11spiRegWritehh>
 7e0:	60 e0       	ldi	r22, 0x00	; 0
 7e2:	8a e0       	ldi	r24, 0x0A	; 10
 7e4:	70 df       	rcall	.-288    	; 0x6c6 <_Z11spiRegWritehh>
 7e6:	60 e4       	ldi	r22, 0x40	; 64
 7e8:	87 e1       	ldi	r24, 0x17	; 23
 7ea:	6d df       	rcall	.-294    	; 0x6c6 <_Z11spiRegWritehh>
 7ec:	60 e0       	ldi	r22, 0x00	; 0
 7ee:	88 e1       	ldi	r24, 0x18	; 24
 7f0:	6a cf       	rjmp	.-300    	; 0x6c6 <_Z11spiRegWritehh>
 7f2:	08 95       	ret

000007f4 <_Z7setTonev>:
 7f4:	cf 93       	push	r28
 7f6:	df 93       	push	r29
 7f8:	cd b7       	in	r28, 0x3d	; 61
 7fa:	de b7       	in	r29, 0x3e	; 62
 7fc:	a3 97       	sbiw	r28, 0x23	; 35
 7fe:	0f b6       	in	r0, 0x3f	; 63
 800:	f8 94       	cli
 802:	de bf       	out	0x3e, r29	; 62
 804:	0f be       	out	0x3f, r0	; 63
 806:	cd bf       	out	0x3d, r28	; 61
 808:	83 e2       	ldi	r24, 0x23	; 35
 80a:	e0 e0       	ldi	r30, 0x00	; 0
 80c:	f1 e0       	ldi	r31, 0x01	; 1
 80e:	de 01       	movw	r26, r28
 810:	11 96       	adiw	r26, 0x01	; 1
 812:	01 90       	ld	r0, Z+
 814:	0d 92       	st	X+, r0
 816:	8a 95       	dec	r24
 818:	e1 f7       	brne	.-8      	; 0x812 <_Z7setTonev+0x1e>
 81a:	66 ef       	ldi	r22, 0xF6	; 246
 81c:	88 e0       	ldi	r24, 0x08	; 8
 81e:	53 df       	rcall	.-346    	; 0x6c6 <_Z11spiRegWritehh>
 820:	8f e9       	ldi	r24, 0x9F	; 159
 822:	9f e0       	ldi	r25, 0x0F	; 15
 824:	01 97       	sbiw	r24, 0x01	; 1
 826:	f1 f7       	brne	.-4      	; 0x824 <_Z7setTonev+0x30>
 828:	00 c0       	rjmp	.+0      	; 0x82a <_Z7setTonev+0x36>
 82a:	00 00       	nop
 82c:	60 e0       	ldi	r22, 0x00	; 0
 82e:	88 e0       	ldi	r24, 0x08	; 8
 830:	4a df       	rcall	.-364    	; 0x6c6 <_Z11spiRegWritehh>
 832:	43 e2       	ldi	r20, 0x23	; 35
 834:	be 01       	movw	r22, r28
 836:	6f 5f       	subi	r22, 0xFF	; 255
 838:	7f 4f       	sbci	r23, 0xFF	; 255
 83a:	87 e0       	ldi	r24, 0x07	; 7
 83c:	53 df       	rcall	.-346    	; 0x6e4 <_Z16spiRegBarstWritehPhh>
 83e:	a3 96       	adiw	r28, 0x23	; 35
 840:	0f b6       	in	r0, 0x3f	; 63
 842:	f8 94       	cli
 844:	de bf       	out	0x3e, r29	; 62
 846:	0f be       	out	0x3f, r0	; 63
 848:	cd bf       	out	0x3d, r28	; 61
 84a:	df 91       	pop	r29
 84c:	cf 91       	pop	r28
 84e:	08 95       	ret

00000850 <_Z5keyOnhhh>:
 850:	1f 93       	push	r17
 852:	cf 93       	push	r28
 854:	df 93       	push	r29
 856:	18 2f       	mov	r17, r24
 858:	d6 2f       	mov	r29, r22
 85a:	c4 2f       	mov	r28, r20
 85c:	60 e0       	ldi	r22, 0x00	; 0
 85e:	8b e0       	ldi	r24, 0x0B	; 11
 860:	32 df       	rcall	.-412    	; 0x6c6 <_Z11spiRegWritehh>
 862:	6c 2f       	mov	r22, r28
 864:	66 0f       	add	r22, r22
 866:	66 0f       	add	r22, r22
 868:	8c e0       	ldi	r24, 0x0C	; 12
 86a:	2d df       	rcall	.-422    	; 0x6c6 <_Z11spiRegWritehh>
 86c:	61 2f       	mov	r22, r17
 86e:	8d e0       	ldi	r24, 0x0D	; 13
 870:	2a df       	rcall	.-428    	; 0x6c6 <_Z11spiRegWritehh>
 872:	6d 2f       	mov	r22, r29
 874:	8e e0       	ldi	r24, 0x0E	; 14
 876:	27 df       	rcall	.-434    	; 0x6c6 <_Z11spiRegWritehh>
 878:	60 e4       	ldi	r22, 0x40	; 64
 87a:	8f e0       	ldi	r24, 0x0F	; 15
 87c:	24 df       	rcall	.-440    	; 0x6c6 <_Z11spiRegWritehh>
 87e:	df 91       	pop	r29
 880:	cf 91       	pop	r28
 882:	1f 91       	pop	r17
 884:	08 95       	ret

00000886 <_Z5setChv>:
 886:	60 e3       	ldi	r22, 0x30	; 48
 888:	8f e0       	ldi	r24, 0x0F	; 15
 88a:	1d df       	rcall	.-454    	; 0x6c6 <_Z11spiRegWritehh>
 88c:	61 e7       	ldi	r22, 0x71	; 113
 88e:	80 e1       	ldi	r24, 0x10	; 16
 890:	1a df       	rcall	.-460    	; 0x6c6 <_Z11spiRegWritehh>
 892:	60 e0       	ldi	r22, 0x00	; 0
 894:	81 e1       	ldi	r24, 0x11	; 17
 896:	17 df       	rcall	.-466    	; 0x6c6 <_Z11spiRegWritehh>
 898:	68 e0       	ldi	r22, 0x08	; 8
 89a:	82 e1       	ldi	r24, 0x12	; 18
 89c:	14 df       	rcall	.-472    	; 0x6c6 <_Z11spiRegWritehh>
 89e:	60 e0       	ldi	r22, 0x00	; 0
 8a0:	83 e1       	ldi	r24, 0x13	; 19
 8a2:	11 cf       	rjmp	.-478    	; 0x6c6 <_Z11spiRegWritehh>
 8a4:	08 95       	ret

000008a6 <_Z12noteNoToFnumj>:
 8a6:	cf 93       	push	r28
 8a8:	df 93       	push	r29
 8aa:	cd b7       	in	r28, 0x3d	; 61
 8ac:	de b7       	in	r29, 0x3e	; 62
 8ae:	68 97       	sbiw	r28, 0x18	; 24
 8b0:	0f b6       	in	r0, 0x3f	; 63
 8b2:	f8 94       	cli
 8b4:	de bf       	out	0x3e, r29	; 62
 8b6:	0f be       	out	0x3f, r0	; 63
 8b8:	cd bf       	out	0x3d, r28	; 61
 8ba:	ac 01       	movw	r20, r24
 8bc:	88 e1       	ldi	r24, 0x18	; 24
 8be:	e3 e2       	ldi	r30, 0x23	; 35
 8c0:	f1 e0       	ldi	r31, 0x01	; 1
 8c2:	de 01       	movw	r26, r28
 8c4:	11 96       	adiw	r26, 0x01	; 1
 8c6:	01 90       	ld	r0, Z+
 8c8:	0d 92       	st	X+, r0
 8ca:	8a 95       	dec	r24
 8cc:	e1 f7       	brne	.-8      	; 0x8c6 <_Z12noteNoToFnumj+0x20>
 8ce:	9a 01       	movw	r18, r20
 8d0:	ab ea       	ldi	r26, 0xAB	; 171
 8d2:	ba ea       	ldi	r27, 0xAA	; 170
 8d4:	66 d0       	rcall	.+204    	; 0x9a2 <__umulhisi3>
 8d6:	96 95       	lsr	r25
 8d8:	87 95       	ror	r24
 8da:	96 95       	lsr	r25
 8dc:	87 95       	ror	r24
 8de:	96 95       	lsr	r25
 8e0:	87 95       	ror	r24
 8e2:	9c 01       	movw	r18, r24
 8e4:	22 0f       	add	r18, r18
 8e6:	33 1f       	adc	r19, r19
 8e8:	82 0f       	add	r24, r18
 8ea:	93 1f       	adc	r25, r19
 8ec:	88 0f       	add	r24, r24
 8ee:	99 1f       	adc	r25, r25
 8f0:	88 0f       	add	r24, r24
 8f2:	99 1f       	adc	r25, r25
 8f4:	fa 01       	movw	r30, r20
 8f6:	e8 1b       	sub	r30, r24
 8f8:	f9 0b       	sbc	r31, r25
 8fa:	ff 27       	eor	r31, r31
 8fc:	ee 0f       	add	r30, r30
 8fe:	ff 1f       	adc	r31, r31
 900:	81 e0       	ldi	r24, 0x01	; 1
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	8c 0f       	add	r24, r28
 906:	9d 1f       	adc	r25, r29
 908:	e8 0f       	add	r30, r24
 90a:	f9 1f       	adc	r31, r25
 90c:	80 81       	ld	r24, Z
 90e:	91 81       	ldd	r25, Z+1	; 0x01
 910:	68 96       	adiw	r28, 0x18	; 24
 912:	0f b6       	in	r0, 0x3f	; 63
 914:	f8 94       	cli
 916:	de bf       	out	0x3e, r29	; 62
 918:	0f be       	out	0x3f, r0	; 63
 91a:	cd bf       	out	0x3d, r28	; 61
 91c:	df 91       	pop	r29
 91e:	cf 91       	pop	r28
 920:	08 95       	ret

00000922 <_Z20keyOnNoteNoWithVovoljh>:

void keyOnNoteNoWithVovol(uint16_t noteNo, uint8_t vovol){
 922:	1f 93       	push	r17
 924:	cf 93       	push	r28
 926:	df 93       	push	r29
 928:	ec 01       	movw	r28, r24
 92a:	16 2f       	mov	r17, r22
	uint8_t block, fnuml, fnumh;
	uint16_t fnum;
	fnum = noteNoToFnum(noteNo);
 92c:	bc df       	rcall	.-136    	; 0x8a6 <_Z12noteNoToFnumj>
	block = noteNoToBlock(noteNo);
	
	fnuml  = (fnum>>4) & 0b00111000;
 92e:	9c 01       	movw	r18, r24
 930:	32 95       	swap	r19
 932:	22 95       	swap	r18
 934:	2f 70       	andi	r18, 0x0F	; 15
 936:	23 27       	eor	r18, r19
 938:	3f 70       	andi	r19, 0x0F	; 15
 93a:	23 27       	eor	r18, r19
 93c:	e2 2f       	mov	r30, r18
 93e:	e8 73       	andi	r30, 0x38	; 56
	fnumh  =      fnum & 0b01111111;
	fnuml |= block;
	
	keyOn(fnuml, fnumh, vovol);
 940:	58 2f       	mov	r21, r24
 942:	5f 77       	andi	r21, 0x7F	; 127
 944:	9e 01       	movw	r18, r28
 946:	ab ea       	ldi	r26, 0xAB	; 171
 948:	ba ea       	ldi	r27, 0xAA	; 170
 94a:	2b d0       	rcall	.+86     	; 0x9a2 <__umulhisi3>
 94c:	96 95       	lsr	r25
 94e:	87 95       	ror	r24
 950:	96 95       	lsr	r25
 952:	87 95       	ror	r24
 954:	96 95       	lsr	r25
 956:	87 95       	ror	r24
 958:	81 50       	subi	r24, 0x01	; 1
 95a:	41 2f       	mov	r20, r17
 95c:	65 2f       	mov	r22, r21
 95e:	8e 2b       	or	r24, r30
 960:	77 df       	rcall	.-274    	; 0x850 <_Z5keyOnhhh>
}
 962:	df 91       	pop	r29
 964:	cf 91       	pop	r28
 966:	1f 91       	pop	r17
 968:	08 95       	ret

0000096a <__divmodsi4>:
 96a:	05 2e       	mov	r0, r21
 96c:	97 fb       	bst	r25, 7
 96e:	16 f4       	brtc	.+4      	; 0x974 <__divmodsi4+0xa>
 970:	00 94       	com	r0
 972:	0f d0       	rcall	.+30     	; 0x992 <__negsi2>
 974:	57 fd       	sbrc	r21, 7
 976:	05 d0       	rcall	.+10     	; 0x982 <__divmodsi4_neg2>
 978:	23 d0       	rcall	.+70     	; 0x9c0 <__udivmodsi4>
 97a:	07 fc       	sbrc	r0, 7
 97c:	02 d0       	rcall	.+4      	; 0x982 <__divmodsi4_neg2>
 97e:	46 f4       	brtc	.+16     	; 0x990 <__divmodsi4_exit>
 980:	08 c0       	rjmp	.+16     	; 0x992 <__negsi2>

00000982 <__divmodsi4_neg2>:
 982:	50 95       	com	r21
 984:	40 95       	com	r20
 986:	30 95       	com	r19
 988:	21 95       	neg	r18
 98a:	3f 4f       	sbci	r19, 0xFF	; 255
 98c:	4f 4f       	sbci	r20, 0xFF	; 255
 98e:	5f 4f       	sbci	r21, 0xFF	; 255

00000990 <__divmodsi4_exit>:
 990:	08 95       	ret

00000992 <__negsi2>:
 992:	90 95       	com	r25
 994:	80 95       	com	r24
 996:	70 95       	com	r23
 998:	61 95       	neg	r22
 99a:	7f 4f       	sbci	r23, 0xFF	; 255
 99c:	8f 4f       	sbci	r24, 0xFF	; 255
 99e:	9f 4f       	sbci	r25, 0xFF	; 255
 9a0:	08 95       	ret

000009a2 <__umulhisi3>:
 9a2:	a2 9f       	mul	r26, r18
 9a4:	b0 01       	movw	r22, r0
 9a6:	b3 9f       	mul	r27, r19
 9a8:	c0 01       	movw	r24, r0
 9aa:	a3 9f       	mul	r26, r19
 9ac:	70 0d       	add	r23, r0
 9ae:	81 1d       	adc	r24, r1
 9b0:	11 24       	eor	r1, r1
 9b2:	91 1d       	adc	r25, r1
 9b4:	b2 9f       	mul	r27, r18
 9b6:	70 0d       	add	r23, r0
 9b8:	81 1d       	adc	r24, r1
 9ba:	11 24       	eor	r1, r1
 9bc:	91 1d       	adc	r25, r1
 9be:	08 95       	ret

000009c0 <__udivmodsi4>:
 9c0:	a1 e2       	ldi	r26, 0x21	; 33
 9c2:	1a 2e       	mov	r1, r26
 9c4:	aa 1b       	sub	r26, r26
 9c6:	bb 1b       	sub	r27, r27
 9c8:	fd 01       	movw	r30, r26
 9ca:	0d c0       	rjmp	.+26     	; 0x9e6 <__udivmodsi4_ep>

000009cc <__udivmodsi4_loop>:
 9cc:	aa 1f       	adc	r26, r26
 9ce:	bb 1f       	adc	r27, r27
 9d0:	ee 1f       	adc	r30, r30
 9d2:	ff 1f       	adc	r31, r31
 9d4:	a2 17       	cp	r26, r18
 9d6:	b3 07       	cpc	r27, r19
 9d8:	e4 07       	cpc	r30, r20
 9da:	f5 07       	cpc	r31, r21
 9dc:	20 f0       	brcs	.+8      	; 0x9e6 <__udivmodsi4_ep>
 9de:	a2 1b       	sub	r26, r18
 9e0:	b3 0b       	sbc	r27, r19
 9e2:	e4 0b       	sbc	r30, r20
 9e4:	f5 0b       	sbc	r31, r21

000009e6 <__udivmodsi4_ep>:
 9e6:	66 1f       	adc	r22, r22
 9e8:	77 1f       	adc	r23, r23
 9ea:	88 1f       	adc	r24, r24
 9ec:	99 1f       	adc	r25, r25
 9ee:	1a 94       	dec	r1
 9f0:	69 f7       	brne	.-38     	; 0x9cc <__udivmodsi4_loop>
 9f2:	60 95       	com	r22
 9f4:	70 95       	com	r23
 9f6:	80 95       	com	r24
 9f8:	90 95       	com	r25
 9fa:	9b 01       	movw	r18, r22
 9fc:	ac 01       	movw	r20, r24
 9fe:	bd 01       	movw	r22, r26
 a00:	cf 01       	movw	r24, r30
 a02:	08 95       	ret

00000a04 <sprintf>:
 a04:	0f 93       	push	r16
 a06:	1f 93       	push	r17
 a08:	cf 93       	push	r28
 a0a:	df 93       	push	r29
 a0c:	cd b7       	in	r28, 0x3d	; 61
 a0e:	de b7       	in	r29, 0x3e	; 62
 a10:	2e 97       	sbiw	r28, 0x0e	; 14
 a12:	0f b6       	in	r0, 0x3f	; 63
 a14:	f8 94       	cli
 a16:	de bf       	out	0x3e, r29	; 62
 a18:	0f be       	out	0x3f, r0	; 63
 a1a:	cd bf       	out	0x3d, r28	; 61
 a1c:	0d 89       	ldd	r16, Y+21	; 0x15
 a1e:	1e 89       	ldd	r17, Y+22	; 0x16
 a20:	86 e0       	ldi	r24, 0x06	; 6
 a22:	8c 83       	std	Y+4, r24	; 0x04
 a24:	1a 83       	std	Y+2, r17	; 0x02
 a26:	09 83       	std	Y+1, r16	; 0x01
 a28:	8f ef       	ldi	r24, 0xFF	; 255
 a2a:	9f e7       	ldi	r25, 0x7F	; 127
 a2c:	9e 83       	std	Y+6, r25	; 0x06
 a2e:	8d 83       	std	Y+5, r24	; 0x05
 a30:	ae 01       	movw	r20, r28
 a32:	47 5e       	subi	r20, 0xE7	; 231
 a34:	5f 4f       	sbci	r21, 0xFF	; 255
 a36:	6f 89       	ldd	r22, Y+23	; 0x17
 a38:	78 8d       	ldd	r23, Y+24	; 0x18
 a3a:	ce 01       	movw	r24, r28
 a3c:	01 96       	adiw	r24, 0x01	; 1
 a3e:	10 d0       	rcall	.+32     	; 0xa60 <vfprintf>
 a40:	ef 81       	ldd	r30, Y+7	; 0x07
 a42:	f8 85       	ldd	r31, Y+8	; 0x08
 a44:	e0 0f       	add	r30, r16
 a46:	f1 1f       	adc	r31, r17
 a48:	10 82       	st	Z, r1
 a4a:	2e 96       	adiw	r28, 0x0e	; 14
 a4c:	0f b6       	in	r0, 0x3f	; 63
 a4e:	f8 94       	cli
 a50:	de bf       	out	0x3e, r29	; 62
 a52:	0f be       	out	0x3f, r0	; 63
 a54:	cd bf       	out	0x3d, r28	; 61
 a56:	df 91       	pop	r29
 a58:	cf 91       	pop	r28
 a5a:	1f 91       	pop	r17
 a5c:	0f 91       	pop	r16
 a5e:	08 95       	ret

00000a60 <vfprintf>:
 a60:	2f 92       	push	r2
 a62:	3f 92       	push	r3
 a64:	4f 92       	push	r4
 a66:	5f 92       	push	r5
 a68:	6f 92       	push	r6
 a6a:	7f 92       	push	r7
 a6c:	8f 92       	push	r8
 a6e:	9f 92       	push	r9
 a70:	af 92       	push	r10
 a72:	bf 92       	push	r11
 a74:	cf 92       	push	r12
 a76:	df 92       	push	r13
 a78:	ef 92       	push	r14
 a7a:	ff 92       	push	r15
 a7c:	0f 93       	push	r16
 a7e:	1f 93       	push	r17
 a80:	cf 93       	push	r28
 a82:	df 93       	push	r29
 a84:	cd b7       	in	r28, 0x3d	; 61
 a86:	de b7       	in	r29, 0x3e	; 62
 a88:	2b 97       	sbiw	r28, 0x0b	; 11
 a8a:	0f b6       	in	r0, 0x3f	; 63
 a8c:	f8 94       	cli
 a8e:	de bf       	out	0x3e, r29	; 62
 a90:	0f be       	out	0x3f, r0	; 63
 a92:	cd bf       	out	0x3d, r28	; 61
 a94:	6c 01       	movw	r12, r24
 a96:	7b 01       	movw	r14, r22
 a98:	8a 01       	movw	r16, r20
 a9a:	fc 01       	movw	r30, r24
 a9c:	17 82       	std	Z+7, r1	; 0x07
 a9e:	16 82       	std	Z+6, r1	; 0x06
 aa0:	83 81       	ldd	r24, Z+3	; 0x03
 aa2:	81 ff       	sbrs	r24, 1
 aa4:	bf c1       	rjmp	.+894    	; 0xe24 <vfprintf+0x3c4>
 aa6:	ce 01       	movw	r24, r28
 aa8:	01 96       	adiw	r24, 0x01	; 1
 aaa:	3c 01       	movw	r6, r24
 aac:	f6 01       	movw	r30, r12
 aae:	93 81       	ldd	r25, Z+3	; 0x03
 ab0:	f7 01       	movw	r30, r14
 ab2:	93 fd       	sbrc	r25, 3
 ab4:	85 91       	lpm	r24, Z+
 ab6:	93 ff       	sbrs	r25, 3
 ab8:	81 91       	ld	r24, Z+
 aba:	7f 01       	movw	r14, r30
 abc:	88 23       	and	r24, r24
 abe:	09 f4       	brne	.+2      	; 0xac2 <vfprintf+0x62>
 ac0:	ad c1       	rjmp	.+858    	; 0xe1c <vfprintf+0x3bc>
 ac2:	85 32       	cpi	r24, 0x25	; 37
 ac4:	39 f4       	brne	.+14     	; 0xad4 <vfprintf+0x74>
 ac6:	93 fd       	sbrc	r25, 3
 ac8:	85 91       	lpm	r24, Z+
 aca:	93 ff       	sbrs	r25, 3
 acc:	81 91       	ld	r24, Z+
 ace:	7f 01       	movw	r14, r30
 ad0:	85 32       	cpi	r24, 0x25	; 37
 ad2:	21 f4       	brne	.+8      	; 0xadc <vfprintf+0x7c>
 ad4:	b6 01       	movw	r22, r12
 ad6:	90 e0       	ldi	r25, 0x00	; 0
 ad8:	d6 d1       	rcall	.+940    	; 0xe86 <fputc>
 ada:	e8 cf       	rjmp	.-48     	; 0xaac <vfprintf+0x4c>
 adc:	91 2c       	mov	r9, r1
 ade:	21 2c       	mov	r2, r1
 ae0:	31 2c       	mov	r3, r1
 ae2:	ff e1       	ldi	r31, 0x1F	; 31
 ae4:	f3 15       	cp	r31, r3
 ae6:	d8 f0       	brcs	.+54     	; 0xb1e <vfprintf+0xbe>
 ae8:	8b 32       	cpi	r24, 0x2B	; 43
 aea:	79 f0       	breq	.+30     	; 0xb0a <vfprintf+0xaa>
 aec:	38 f4       	brcc	.+14     	; 0xafc <vfprintf+0x9c>
 aee:	80 32       	cpi	r24, 0x20	; 32
 af0:	79 f0       	breq	.+30     	; 0xb10 <vfprintf+0xb0>
 af2:	83 32       	cpi	r24, 0x23	; 35
 af4:	a1 f4       	brne	.+40     	; 0xb1e <vfprintf+0xbe>
 af6:	23 2d       	mov	r18, r3
 af8:	20 61       	ori	r18, 0x10	; 16
 afa:	1d c0       	rjmp	.+58     	; 0xb36 <vfprintf+0xd6>
 afc:	8d 32       	cpi	r24, 0x2D	; 45
 afe:	61 f0       	breq	.+24     	; 0xb18 <vfprintf+0xb8>
 b00:	80 33       	cpi	r24, 0x30	; 48
 b02:	69 f4       	brne	.+26     	; 0xb1e <vfprintf+0xbe>
 b04:	23 2d       	mov	r18, r3
 b06:	21 60       	ori	r18, 0x01	; 1
 b08:	16 c0       	rjmp	.+44     	; 0xb36 <vfprintf+0xd6>
 b0a:	83 2d       	mov	r24, r3
 b0c:	82 60       	ori	r24, 0x02	; 2
 b0e:	38 2e       	mov	r3, r24
 b10:	e3 2d       	mov	r30, r3
 b12:	e4 60       	ori	r30, 0x04	; 4
 b14:	3e 2e       	mov	r3, r30
 b16:	2a c0       	rjmp	.+84     	; 0xb6c <vfprintf+0x10c>
 b18:	f3 2d       	mov	r31, r3
 b1a:	f8 60       	ori	r31, 0x08	; 8
 b1c:	1d c0       	rjmp	.+58     	; 0xb58 <vfprintf+0xf8>
 b1e:	37 fc       	sbrc	r3, 7
 b20:	2d c0       	rjmp	.+90     	; 0xb7c <vfprintf+0x11c>
 b22:	20 ed       	ldi	r18, 0xD0	; 208
 b24:	28 0f       	add	r18, r24
 b26:	2a 30       	cpi	r18, 0x0A	; 10
 b28:	40 f0       	brcs	.+16     	; 0xb3a <vfprintf+0xda>
 b2a:	8e 32       	cpi	r24, 0x2E	; 46
 b2c:	b9 f4       	brne	.+46     	; 0xb5c <vfprintf+0xfc>
 b2e:	36 fc       	sbrc	r3, 6
 b30:	75 c1       	rjmp	.+746    	; 0xe1c <vfprintf+0x3bc>
 b32:	23 2d       	mov	r18, r3
 b34:	20 64       	ori	r18, 0x40	; 64
 b36:	32 2e       	mov	r3, r18
 b38:	19 c0       	rjmp	.+50     	; 0xb6c <vfprintf+0x10c>
 b3a:	36 fe       	sbrs	r3, 6
 b3c:	06 c0       	rjmp	.+12     	; 0xb4a <vfprintf+0xea>
 b3e:	8a e0       	ldi	r24, 0x0A	; 10
 b40:	98 9e       	mul	r9, r24
 b42:	20 0d       	add	r18, r0
 b44:	11 24       	eor	r1, r1
 b46:	92 2e       	mov	r9, r18
 b48:	11 c0       	rjmp	.+34     	; 0xb6c <vfprintf+0x10c>
 b4a:	ea e0       	ldi	r30, 0x0A	; 10
 b4c:	2e 9e       	mul	r2, r30
 b4e:	20 0d       	add	r18, r0
 b50:	11 24       	eor	r1, r1
 b52:	22 2e       	mov	r2, r18
 b54:	f3 2d       	mov	r31, r3
 b56:	f0 62       	ori	r31, 0x20	; 32
 b58:	3f 2e       	mov	r3, r31
 b5a:	08 c0       	rjmp	.+16     	; 0xb6c <vfprintf+0x10c>
 b5c:	8c 36       	cpi	r24, 0x6C	; 108
 b5e:	21 f4       	brne	.+8      	; 0xb68 <vfprintf+0x108>
 b60:	83 2d       	mov	r24, r3
 b62:	80 68       	ori	r24, 0x80	; 128
 b64:	38 2e       	mov	r3, r24
 b66:	02 c0       	rjmp	.+4      	; 0xb6c <vfprintf+0x10c>
 b68:	88 36       	cpi	r24, 0x68	; 104
 b6a:	41 f4       	brne	.+16     	; 0xb7c <vfprintf+0x11c>
 b6c:	f7 01       	movw	r30, r14
 b6e:	93 fd       	sbrc	r25, 3
 b70:	85 91       	lpm	r24, Z+
 b72:	93 ff       	sbrs	r25, 3
 b74:	81 91       	ld	r24, Z+
 b76:	7f 01       	movw	r14, r30
 b78:	81 11       	cpse	r24, r1
 b7a:	b3 cf       	rjmp	.-154    	; 0xae2 <vfprintf+0x82>
 b7c:	98 2f       	mov	r25, r24
 b7e:	9f 7d       	andi	r25, 0xDF	; 223
 b80:	95 54       	subi	r25, 0x45	; 69
 b82:	93 30       	cpi	r25, 0x03	; 3
 b84:	28 f4       	brcc	.+10     	; 0xb90 <vfprintf+0x130>
 b86:	0c 5f       	subi	r16, 0xFC	; 252
 b88:	1f 4f       	sbci	r17, 0xFF	; 255
 b8a:	9f e3       	ldi	r25, 0x3F	; 63
 b8c:	99 83       	std	Y+1, r25	; 0x01
 b8e:	0d c0       	rjmp	.+26     	; 0xbaa <vfprintf+0x14a>
 b90:	83 36       	cpi	r24, 0x63	; 99
 b92:	31 f0       	breq	.+12     	; 0xba0 <vfprintf+0x140>
 b94:	83 37       	cpi	r24, 0x73	; 115
 b96:	71 f0       	breq	.+28     	; 0xbb4 <vfprintf+0x154>
 b98:	83 35       	cpi	r24, 0x53	; 83
 b9a:	09 f0       	breq	.+2      	; 0xb9e <vfprintf+0x13e>
 b9c:	55 c0       	rjmp	.+170    	; 0xc48 <vfprintf+0x1e8>
 b9e:	20 c0       	rjmp	.+64     	; 0xbe0 <vfprintf+0x180>
 ba0:	f8 01       	movw	r30, r16
 ba2:	80 81       	ld	r24, Z
 ba4:	89 83       	std	Y+1, r24	; 0x01
 ba6:	0e 5f       	subi	r16, 0xFE	; 254
 ba8:	1f 4f       	sbci	r17, 0xFF	; 255
 baa:	88 24       	eor	r8, r8
 bac:	83 94       	inc	r8
 bae:	91 2c       	mov	r9, r1
 bb0:	53 01       	movw	r10, r6
 bb2:	12 c0       	rjmp	.+36     	; 0xbd8 <vfprintf+0x178>
 bb4:	28 01       	movw	r4, r16
 bb6:	f2 e0       	ldi	r31, 0x02	; 2
 bb8:	4f 0e       	add	r4, r31
 bba:	51 1c       	adc	r5, r1
 bbc:	f8 01       	movw	r30, r16
 bbe:	a0 80       	ld	r10, Z
 bc0:	b1 80       	ldd	r11, Z+1	; 0x01
 bc2:	36 fe       	sbrs	r3, 6
 bc4:	03 c0       	rjmp	.+6      	; 0xbcc <vfprintf+0x16c>
 bc6:	69 2d       	mov	r22, r9
 bc8:	70 e0       	ldi	r23, 0x00	; 0
 bca:	02 c0       	rjmp	.+4      	; 0xbd0 <vfprintf+0x170>
 bcc:	6f ef       	ldi	r22, 0xFF	; 255
 bce:	7f ef       	ldi	r23, 0xFF	; 255
 bd0:	c5 01       	movw	r24, r10
 bd2:	4e d1       	rcall	.+668    	; 0xe70 <strnlen>
 bd4:	4c 01       	movw	r8, r24
 bd6:	82 01       	movw	r16, r4
 bd8:	f3 2d       	mov	r31, r3
 bda:	ff 77       	andi	r31, 0x7F	; 127
 bdc:	3f 2e       	mov	r3, r31
 bde:	15 c0       	rjmp	.+42     	; 0xc0a <vfprintf+0x1aa>
 be0:	28 01       	movw	r4, r16
 be2:	22 e0       	ldi	r18, 0x02	; 2
 be4:	42 0e       	add	r4, r18
 be6:	51 1c       	adc	r5, r1
 be8:	f8 01       	movw	r30, r16
 bea:	a0 80       	ld	r10, Z
 bec:	b1 80       	ldd	r11, Z+1	; 0x01
 bee:	36 fe       	sbrs	r3, 6
 bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <vfprintf+0x198>
 bf2:	69 2d       	mov	r22, r9
 bf4:	70 e0       	ldi	r23, 0x00	; 0
 bf6:	02 c0       	rjmp	.+4      	; 0xbfc <vfprintf+0x19c>
 bf8:	6f ef       	ldi	r22, 0xFF	; 255
 bfa:	7f ef       	ldi	r23, 0xFF	; 255
 bfc:	c5 01       	movw	r24, r10
 bfe:	2d d1       	rcall	.+602    	; 0xe5a <strnlen_P>
 c00:	4c 01       	movw	r8, r24
 c02:	f3 2d       	mov	r31, r3
 c04:	f0 68       	ori	r31, 0x80	; 128
 c06:	3f 2e       	mov	r3, r31
 c08:	82 01       	movw	r16, r4
 c0a:	33 fc       	sbrc	r3, 3
 c0c:	19 c0       	rjmp	.+50     	; 0xc40 <vfprintf+0x1e0>
 c0e:	82 2d       	mov	r24, r2
 c10:	90 e0       	ldi	r25, 0x00	; 0
 c12:	88 16       	cp	r8, r24
 c14:	99 06       	cpc	r9, r25
 c16:	a0 f4       	brcc	.+40     	; 0xc40 <vfprintf+0x1e0>
 c18:	b6 01       	movw	r22, r12
 c1a:	80 e2       	ldi	r24, 0x20	; 32
 c1c:	90 e0       	ldi	r25, 0x00	; 0
 c1e:	33 d1       	rcall	.+614    	; 0xe86 <fputc>
 c20:	2a 94       	dec	r2
 c22:	f5 cf       	rjmp	.-22     	; 0xc0e <vfprintf+0x1ae>
 c24:	f5 01       	movw	r30, r10
 c26:	37 fc       	sbrc	r3, 7
 c28:	85 91       	lpm	r24, Z+
 c2a:	37 fe       	sbrs	r3, 7
 c2c:	81 91       	ld	r24, Z+
 c2e:	5f 01       	movw	r10, r30
 c30:	b6 01       	movw	r22, r12
 c32:	90 e0       	ldi	r25, 0x00	; 0
 c34:	28 d1       	rcall	.+592    	; 0xe86 <fputc>
 c36:	21 10       	cpse	r2, r1
 c38:	2a 94       	dec	r2
 c3a:	21 e0       	ldi	r18, 0x01	; 1
 c3c:	82 1a       	sub	r8, r18
 c3e:	91 08       	sbc	r9, r1
 c40:	81 14       	cp	r8, r1
 c42:	91 04       	cpc	r9, r1
 c44:	79 f7       	brne	.-34     	; 0xc24 <vfprintf+0x1c4>
 c46:	e1 c0       	rjmp	.+450    	; 0xe0a <vfprintf+0x3aa>
 c48:	84 36       	cpi	r24, 0x64	; 100
 c4a:	11 f0       	breq	.+4      	; 0xc50 <vfprintf+0x1f0>
 c4c:	89 36       	cpi	r24, 0x69	; 105
 c4e:	39 f5       	brne	.+78     	; 0xc9e <vfprintf+0x23e>
 c50:	f8 01       	movw	r30, r16
 c52:	37 fe       	sbrs	r3, 7
 c54:	07 c0       	rjmp	.+14     	; 0xc64 <vfprintf+0x204>
 c56:	60 81       	ld	r22, Z
 c58:	71 81       	ldd	r23, Z+1	; 0x01
 c5a:	82 81       	ldd	r24, Z+2	; 0x02
 c5c:	93 81       	ldd	r25, Z+3	; 0x03
 c5e:	0c 5f       	subi	r16, 0xFC	; 252
 c60:	1f 4f       	sbci	r17, 0xFF	; 255
 c62:	08 c0       	rjmp	.+16     	; 0xc74 <vfprintf+0x214>
 c64:	60 81       	ld	r22, Z
 c66:	71 81       	ldd	r23, Z+1	; 0x01
 c68:	07 2e       	mov	r0, r23
 c6a:	00 0c       	add	r0, r0
 c6c:	88 0b       	sbc	r24, r24
 c6e:	99 0b       	sbc	r25, r25
 c70:	0e 5f       	subi	r16, 0xFE	; 254
 c72:	1f 4f       	sbci	r17, 0xFF	; 255
 c74:	f3 2d       	mov	r31, r3
 c76:	ff 76       	andi	r31, 0x6F	; 111
 c78:	3f 2e       	mov	r3, r31
 c7a:	97 ff       	sbrs	r25, 7
 c7c:	09 c0       	rjmp	.+18     	; 0xc90 <vfprintf+0x230>
 c7e:	90 95       	com	r25
 c80:	80 95       	com	r24
 c82:	70 95       	com	r23
 c84:	61 95       	neg	r22
 c86:	7f 4f       	sbci	r23, 0xFF	; 255
 c88:	8f 4f       	sbci	r24, 0xFF	; 255
 c8a:	9f 4f       	sbci	r25, 0xFF	; 255
 c8c:	f0 68       	ori	r31, 0x80	; 128
 c8e:	3f 2e       	mov	r3, r31
 c90:	2a e0       	ldi	r18, 0x0A	; 10
 c92:	30 e0       	ldi	r19, 0x00	; 0
 c94:	a3 01       	movw	r20, r6
 c96:	33 d1       	rcall	.+614    	; 0xefe <__ultoa_invert>
 c98:	88 2e       	mov	r8, r24
 c9a:	86 18       	sub	r8, r6
 c9c:	44 c0       	rjmp	.+136    	; 0xd26 <vfprintf+0x2c6>
 c9e:	85 37       	cpi	r24, 0x75	; 117
 ca0:	31 f4       	brne	.+12     	; 0xcae <vfprintf+0x24e>
 ca2:	23 2d       	mov	r18, r3
 ca4:	2f 7e       	andi	r18, 0xEF	; 239
 ca6:	b2 2e       	mov	r11, r18
 ca8:	2a e0       	ldi	r18, 0x0A	; 10
 caa:	30 e0       	ldi	r19, 0x00	; 0
 cac:	25 c0       	rjmp	.+74     	; 0xcf8 <vfprintf+0x298>
 cae:	93 2d       	mov	r25, r3
 cb0:	99 7f       	andi	r25, 0xF9	; 249
 cb2:	b9 2e       	mov	r11, r25
 cb4:	8f 36       	cpi	r24, 0x6F	; 111
 cb6:	c1 f0       	breq	.+48     	; 0xce8 <vfprintf+0x288>
 cb8:	18 f4       	brcc	.+6      	; 0xcc0 <vfprintf+0x260>
 cba:	88 35       	cpi	r24, 0x58	; 88
 cbc:	79 f0       	breq	.+30     	; 0xcdc <vfprintf+0x27c>
 cbe:	ae c0       	rjmp	.+348    	; 0xe1c <vfprintf+0x3bc>
 cc0:	80 37       	cpi	r24, 0x70	; 112
 cc2:	19 f0       	breq	.+6      	; 0xcca <vfprintf+0x26a>
 cc4:	88 37       	cpi	r24, 0x78	; 120
 cc6:	21 f0       	breq	.+8      	; 0xcd0 <vfprintf+0x270>
 cc8:	a9 c0       	rjmp	.+338    	; 0xe1c <vfprintf+0x3bc>
 cca:	e9 2f       	mov	r30, r25
 ccc:	e0 61       	ori	r30, 0x10	; 16
 cce:	be 2e       	mov	r11, r30
 cd0:	b4 fe       	sbrs	r11, 4
 cd2:	0d c0       	rjmp	.+26     	; 0xcee <vfprintf+0x28e>
 cd4:	fb 2d       	mov	r31, r11
 cd6:	f4 60       	ori	r31, 0x04	; 4
 cd8:	bf 2e       	mov	r11, r31
 cda:	09 c0       	rjmp	.+18     	; 0xcee <vfprintf+0x28e>
 cdc:	34 fe       	sbrs	r3, 4
 cde:	0a c0       	rjmp	.+20     	; 0xcf4 <vfprintf+0x294>
 ce0:	29 2f       	mov	r18, r25
 ce2:	26 60       	ori	r18, 0x06	; 6
 ce4:	b2 2e       	mov	r11, r18
 ce6:	06 c0       	rjmp	.+12     	; 0xcf4 <vfprintf+0x294>
 ce8:	28 e0       	ldi	r18, 0x08	; 8
 cea:	30 e0       	ldi	r19, 0x00	; 0
 cec:	05 c0       	rjmp	.+10     	; 0xcf8 <vfprintf+0x298>
 cee:	20 e1       	ldi	r18, 0x10	; 16
 cf0:	30 e0       	ldi	r19, 0x00	; 0
 cf2:	02 c0       	rjmp	.+4      	; 0xcf8 <vfprintf+0x298>
 cf4:	20 e1       	ldi	r18, 0x10	; 16
 cf6:	32 e0       	ldi	r19, 0x02	; 2
 cf8:	f8 01       	movw	r30, r16
 cfa:	b7 fe       	sbrs	r11, 7
 cfc:	07 c0       	rjmp	.+14     	; 0xd0c <vfprintf+0x2ac>
 cfe:	60 81       	ld	r22, Z
 d00:	71 81       	ldd	r23, Z+1	; 0x01
 d02:	82 81       	ldd	r24, Z+2	; 0x02
 d04:	93 81       	ldd	r25, Z+3	; 0x03
 d06:	0c 5f       	subi	r16, 0xFC	; 252
 d08:	1f 4f       	sbci	r17, 0xFF	; 255
 d0a:	06 c0       	rjmp	.+12     	; 0xd18 <vfprintf+0x2b8>
 d0c:	60 81       	ld	r22, Z
 d0e:	71 81       	ldd	r23, Z+1	; 0x01
 d10:	80 e0       	ldi	r24, 0x00	; 0
 d12:	90 e0       	ldi	r25, 0x00	; 0
 d14:	0e 5f       	subi	r16, 0xFE	; 254
 d16:	1f 4f       	sbci	r17, 0xFF	; 255
 d18:	a3 01       	movw	r20, r6
 d1a:	f1 d0       	rcall	.+482    	; 0xefe <__ultoa_invert>
 d1c:	88 2e       	mov	r8, r24
 d1e:	86 18       	sub	r8, r6
 d20:	fb 2d       	mov	r31, r11
 d22:	ff 77       	andi	r31, 0x7F	; 127
 d24:	3f 2e       	mov	r3, r31
 d26:	36 fe       	sbrs	r3, 6
 d28:	0d c0       	rjmp	.+26     	; 0xd44 <vfprintf+0x2e4>
 d2a:	23 2d       	mov	r18, r3
 d2c:	2e 7f       	andi	r18, 0xFE	; 254
 d2e:	a2 2e       	mov	r10, r18
 d30:	89 14       	cp	r8, r9
 d32:	58 f4       	brcc	.+22     	; 0xd4a <vfprintf+0x2ea>
 d34:	34 fe       	sbrs	r3, 4
 d36:	0b c0       	rjmp	.+22     	; 0xd4e <vfprintf+0x2ee>
 d38:	32 fc       	sbrc	r3, 2
 d3a:	09 c0       	rjmp	.+18     	; 0xd4e <vfprintf+0x2ee>
 d3c:	83 2d       	mov	r24, r3
 d3e:	8e 7e       	andi	r24, 0xEE	; 238
 d40:	a8 2e       	mov	r10, r24
 d42:	05 c0       	rjmp	.+10     	; 0xd4e <vfprintf+0x2ee>
 d44:	b8 2c       	mov	r11, r8
 d46:	a3 2c       	mov	r10, r3
 d48:	03 c0       	rjmp	.+6      	; 0xd50 <vfprintf+0x2f0>
 d4a:	b8 2c       	mov	r11, r8
 d4c:	01 c0       	rjmp	.+2      	; 0xd50 <vfprintf+0x2f0>
 d4e:	b9 2c       	mov	r11, r9
 d50:	a4 fe       	sbrs	r10, 4
 d52:	0f c0       	rjmp	.+30     	; 0xd72 <vfprintf+0x312>
 d54:	fe 01       	movw	r30, r28
 d56:	e8 0d       	add	r30, r8
 d58:	f1 1d       	adc	r31, r1
 d5a:	80 81       	ld	r24, Z
 d5c:	80 33       	cpi	r24, 0x30	; 48
 d5e:	21 f4       	brne	.+8      	; 0xd68 <vfprintf+0x308>
 d60:	9a 2d       	mov	r25, r10
 d62:	99 7e       	andi	r25, 0xE9	; 233
 d64:	a9 2e       	mov	r10, r25
 d66:	09 c0       	rjmp	.+18     	; 0xd7a <vfprintf+0x31a>
 d68:	a2 fe       	sbrs	r10, 2
 d6a:	06 c0       	rjmp	.+12     	; 0xd78 <vfprintf+0x318>
 d6c:	b3 94       	inc	r11
 d6e:	b3 94       	inc	r11
 d70:	04 c0       	rjmp	.+8      	; 0xd7a <vfprintf+0x31a>
 d72:	8a 2d       	mov	r24, r10
 d74:	86 78       	andi	r24, 0x86	; 134
 d76:	09 f0       	breq	.+2      	; 0xd7a <vfprintf+0x31a>
 d78:	b3 94       	inc	r11
 d7a:	a3 fc       	sbrc	r10, 3
 d7c:	10 c0       	rjmp	.+32     	; 0xd9e <vfprintf+0x33e>
 d7e:	a0 fe       	sbrs	r10, 0
 d80:	06 c0       	rjmp	.+12     	; 0xd8e <vfprintf+0x32e>
 d82:	b2 14       	cp	r11, r2
 d84:	80 f4       	brcc	.+32     	; 0xda6 <vfprintf+0x346>
 d86:	28 0c       	add	r2, r8
 d88:	92 2c       	mov	r9, r2
 d8a:	9b 18       	sub	r9, r11
 d8c:	0d c0       	rjmp	.+26     	; 0xda8 <vfprintf+0x348>
 d8e:	b2 14       	cp	r11, r2
 d90:	58 f4       	brcc	.+22     	; 0xda8 <vfprintf+0x348>
 d92:	b6 01       	movw	r22, r12
 d94:	80 e2       	ldi	r24, 0x20	; 32
 d96:	90 e0       	ldi	r25, 0x00	; 0
 d98:	76 d0       	rcall	.+236    	; 0xe86 <fputc>
 d9a:	b3 94       	inc	r11
 d9c:	f8 cf       	rjmp	.-16     	; 0xd8e <vfprintf+0x32e>
 d9e:	b2 14       	cp	r11, r2
 da0:	18 f4       	brcc	.+6      	; 0xda8 <vfprintf+0x348>
 da2:	2b 18       	sub	r2, r11
 da4:	02 c0       	rjmp	.+4      	; 0xdaa <vfprintf+0x34a>
 da6:	98 2c       	mov	r9, r8
 da8:	21 2c       	mov	r2, r1
 daa:	a4 fe       	sbrs	r10, 4
 dac:	0f c0       	rjmp	.+30     	; 0xdcc <vfprintf+0x36c>
 dae:	b6 01       	movw	r22, r12
 db0:	80 e3       	ldi	r24, 0x30	; 48
 db2:	90 e0       	ldi	r25, 0x00	; 0
 db4:	68 d0       	rcall	.+208    	; 0xe86 <fputc>
 db6:	a2 fe       	sbrs	r10, 2
 db8:	16 c0       	rjmp	.+44     	; 0xde6 <vfprintf+0x386>
 dba:	a1 fc       	sbrc	r10, 1
 dbc:	03 c0       	rjmp	.+6      	; 0xdc4 <vfprintf+0x364>
 dbe:	88 e7       	ldi	r24, 0x78	; 120
 dc0:	90 e0       	ldi	r25, 0x00	; 0
 dc2:	02 c0       	rjmp	.+4      	; 0xdc8 <vfprintf+0x368>
 dc4:	88 e5       	ldi	r24, 0x58	; 88
 dc6:	90 e0       	ldi	r25, 0x00	; 0
 dc8:	b6 01       	movw	r22, r12
 dca:	0c c0       	rjmp	.+24     	; 0xde4 <vfprintf+0x384>
 dcc:	8a 2d       	mov	r24, r10
 dce:	86 78       	andi	r24, 0x86	; 134
 dd0:	51 f0       	breq	.+20     	; 0xde6 <vfprintf+0x386>
 dd2:	a1 fe       	sbrs	r10, 1
 dd4:	02 c0       	rjmp	.+4      	; 0xdda <vfprintf+0x37a>
 dd6:	8b e2       	ldi	r24, 0x2B	; 43
 dd8:	01 c0       	rjmp	.+2      	; 0xddc <vfprintf+0x37c>
 dda:	80 e2       	ldi	r24, 0x20	; 32
 ddc:	a7 fc       	sbrc	r10, 7
 dde:	8d e2       	ldi	r24, 0x2D	; 45
 de0:	b6 01       	movw	r22, r12
 de2:	90 e0       	ldi	r25, 0x00	; 0
 de4:	50 d0       	rcall	.+160    	; 0xe86 <fputc>
 de6:	89 14       	cp	r8, r9
 de8:	30 f4       	brcc	.+12     	; 0xdf6 <vfprintf+0x396>
 dea:	b6 01       	movw	r22, r12
 dec:	80 e3       	ldi	r24, 0x30	; 48
 dee:	90 e0       	ldi	r25, 0x00	; 0
 df0:	4a d0       	rcall	.+148    	; 0xe86 <fputc>
 df2:	9a 94       	dec	r9
 df4:	f8 cf       	rjmp	.-16     	; 0xde6 <vfprintf+0x386>
 df6:	8a 94       	dec	r8
 df8:	f3 01       	movw	r30, r6
 dfa:	e8 0d       	add	r30, r8
 dfc:	f1 1d       	adc	r31, r1
 dfe:	80 81       	ld	r24, Z
 e00:	b6 01       	movw	r22, r12
 e02:	90 e0       	ldi	r25, 0x00	; 0
 e04:	40 d0       	rcall	.+128    	; 0xe86 <fputc>
 e06:	81 10       	cpse	r8, r1
 e08:	f6 cf       	rjmp	.-20     	; 0xdf6 <vfprintf+0x396>
 e0a:	22 20       	and	r2, r2
 e0c:	09 f4       	brne	.+2      	; 0xe10 <vfprintf+0x3b0>
 e0e:	4e ce       	rjmp	.-868    	; 0xaac <vfprintf+0x4c>
 e10:	b6 01       	movw	r22, r12
 e12:	80 e2       	ldi	r24, 0x20	; 32
 e14:	90 e0       	ldi	r25, 0x00	; 0
 e16:	37 d0       	rcall	.+110    	; 0xe86 <fputc>
 e18:	2a 94       	dec	r2
 e1a:	f7 cf       	rjmp	.-18     	; 0xe0a <vfprintf+0x3aa>
 e1c:	f6 01       	movw	r30, r12
 e1e:	86 81       	ldd	r24, Z+6	; 0x06
 e20:	97 81       	ldd	r25, Z+7	; 0x07
 e22:	02 c0       	rjmp	.+4      	; 0xe28 <vfprintf+0x3c8>
 e24:	8f ef       	ldi	r24, 0xFF	; 255
 e26:	9f ef       	ldi	r25, 0xFF	; 255
 e28:	2b 96       	adiw	r28, 0x0b	; 11
 e2a:	0f b6       	in	r0, 0x3f	; 63
 e2c:	f8 94       	cli
 e2e:	de bf       	out	0x3e, r29	; 62
 e30:	0f be       	out	0x3f, r0	; 63
 e32:	cd bf       	out	0x3d, r28	; 61
 e34:	df 91       	pop	r29
 e36:	cf 91       	pop	r28
 e38:	1f 91       	pop	r17
 e3a:	0f 91       	pop	r16
 e3c:	ff 90       	pop	r15
 e3e:	ef 90       	pop	r14
 e40:	df 90       	pop	r13
 e42:	cf 90       	pop	r12
 e44:	bf 90       	pop	r11
 e46:	af 90       	pop	r10
 e48:	9f 90       	pop	r9
 e4a:	8f 90       	pop	r8
 e4c:	7f 90       	pop	r7
 e4e:	6f 90       	pop	r6
 e50:	5f 90       	pop	r5
 e52:	4f 90       	pop	r4
 e54:	3f 90       	pop	r3
 e56:	2f 90       	pop	r2
 e58:	08 95       	ret

00000e5a <strnlen_P>:
 e5a:	fc 01       	movw	r30, r24
 e5c:	05 90       	lpm	r0, Z+
 e5e:	61 50       	subi	r22, 0x01	; 1
 e60:	70 40       	sbci	r23, 0x00	; 0
 e62:	01 10       	cpse	r0, r1
 e64:	d8 f7       	brcc	.-10     	; 0xe5c <strnlen_P+0x2>
 e66:	80 95       	com	r24
 e68:	90 95       	com	r25
 e6a:	8e 0f       	add	r24, r30
 e6c:	9f 1f       	adc	r25, r31
 e6e:	08 95       	ret

00000e70 <strnlen>:
 e70:	fc 01       	movw	r30, r24
 e72:	61 50       	subi	r22, 0x01	; 1
 e74:	70 40       	sbci	r23, 0x00	; 0
 e76:	01 90       	ld	r0, Z+
 e78:	01 10       	cpse	r0, r1
 e7a:	d8 f7       	brcc	.-10     	; 0xe72 <strnlen+0x2>
 e7c:	80 95       	com	r24
 e7e:	90 95       	com	r25
 e80:	8e 0f       	add	r24, r30
 e82:	9f 1f       	adc	r25, r31
 e84:	08 95       	ret

00000e86 <fputc>:
 e86:	0f 93       	push	r16
 e88:	1f 93       	push	r17
 e8a:	cf 93       	push	r28
 e8c:	df 93       	push	r29
 e8e:	fb 01       	movw	r30, r22
 e90:	23 81       	ldd	r18, Z+3	; 0x03
 e92:	21 fd       	sbrc	r18, 1
 e94:	03 c0       	rjmp	.+6      	; 0xe9c <fputc+0x16>
 e96:	8f ef       	ldi	r24, 0xFF	; 255
 e98:	9f ef       	ldi	r25, 0xFF	; 255
 e9a:	2c c0       	rjmp	.+88     	; 0xef4 <fputc+0x6e>
 e9c:	22 ff       	sbrs	r18, 2
 e9e:	16 c0       	rjmp	.+44     	; 0xecc <fputc+0x46>
 ea0:	46 81       	ldd	r20, Z+6	; 0x06
 ea2:	57 81       	ldd	r21, Z+7	; 0x07
 ea4:	24 81       	ldd	r18, Z+4	; 0x04
 ea6:	35 81       	ldd	r19, Z+5	; 0x05
 ea8:	42 17       	cp	r20, r18
 eaa:	53 07       	cpc	r21, r19
 eac:	44 f4       	brge	.+16     	; 0xebe <fputc+0x38>
 eae:	a0 81       	ld	r26, Z
 eb0:	b1 81       	ldd	r27, Z+1	; 0x01
 eb2:	9d 01       	movw	r18, r26
 eb4:	2f 5f       	subi	r18, 0xFF	; 255
 eb6:	3f 4f       	sbci	r19, 0xFF	; 255
 eb8:	31 83       	std	Z+1, r19	; 0x01
 eba:	20 83       	st	Z, r18
 ebc:	8c 93       	st	X, r24
 ebe:	26 81       	ldd	r18, Z+6	; 0x06
 ec0:	37 81       	ldd	r19, Z+7	; 0x07
 ec2:	2f 5f       	subi	r18, 0xFF	; 255
 ec4:	3f 4f       	sbci	r19, 0xFF	; 255
 ec6:	37 83       	std	Z+7, r19	; 0x07
 ec8:	26 83       	std	Z+6, r18	; 0x06
 eca:	14 c0       	rjmp	.+40     	; 0xef4 <fputc+0x6e>
 ecc:	8b 01       	movw	r16, r22
 ece:	ec 01       	movw	r28, r24
 ed0:	fb 01       	movw	r30, r22
 ed2:	00 84       	ldd	r0, Z+8	; 0x08
 ed4:	f1 85       	ldd	r31, Z+9	; 0x09
 ed6:	e0 2d       	mov	r30, r0
 ed8:	09 95       	icall
 eda:	89 2b       	or	r24, r25
 edc:	e1 f6       	brne	.-72     	; 0xe96 <fputc+0x10>
 ede:	d8 01       	movw	r26, r16
 ee0:	16 96       	adiw	r26, 0x06	; 6
 ee2:	8d 91       	ld	r24, X+
 ee4:	9c 91       	ld	r25, X
 ee6:	17 97       	sbiw	r26, 0x07	; 7
 ee8:	01 96       	adiw	r24, 0x01	; 1
 eea:	17 96       	adiw	r26, 0x07	; 7
 eec:	9c 93       	st	X, r25
 eee:	8e 93       	st	-X, r24
 ef0:	16 97       	sbiw	r26, 0x06	; 6
 ef2:	ce 01       	movw	r24, r28
 ef4:	df 91       	pop	r29
 ef6:	cf 91       	pop	r28
 ef8:	1f 91       	pop	r17
 efa:	0f 91       	pop	r16
 efc:	08 95       	ret

00000efe <__ultoa_invert>:
 efe:	fa 01       	movw	r30, r20
 f00:	aa 27       	eor	r26, r26
 f02:	28 30       	cpi	r18, 0x08	; 8
 f04:	51 f1       	breq	.+84     	; 0xf5a <__ultoa_invert+0x5c>
 f06:	20 31       	cpi	r18, 0x10	; 16
 f08:	81 f1       	breq	.+96     	; 0xf6a <__ultoa_invert+0x6c>
 f0a:	e8 94       	clt
 f0c:	6f 93       	push	r22
 f0e:	6e 7f       	andi	r22, 0xFE	; 254
 f10:	6e 5f       	subi	r22, 0xFE	; 254
 f12:	7f 4f       	sbci	r23, 0xFF	; 255
 f14:	8f 4f       	sbci	r24, 0xFF	; 255
 f16:	9f 4f       	sbci	r25, 0xFF	; 255
 f18:	af 4f       	sbci	r26, 0xFF	; 255
 f1a:	b1 e0       	ldi	r27, 0x01	; 1
 f1c:	3e d0       	rcall	.+124    	; 0xf9a <__ultoa_invert+0x9c>
 f1e:	b4 e0       	ldi	r27, 0x04	; 4
 f20:	3c d0       	rcall	.+120    	; 0xf9a <__ultoa_invert+0x9c>
 f22:	67 0f       	add	r22, r23
 f24:	78 1f       	adc	r23, r24
 f26:	89 1f       	adc	r24, r25
 f28:	9a 1f       	adc	r25, r26
 f2a:	a1 1d       	adc	r26, r1
 f2c:	68 0f       	add	r22, r24
 f2e:	79 1f       	adc	r23, r25
 f30:	8a 1f       	adc	r24, r26
 f32:	91 1d       	adc	r25, r1
 f34:	a1 1d       	adc	r26, r1
 f36:	6a 0f       	add	r22, r26
 f38:	71 1d       	adc	r23, r1
 f3a:	81 1d       	adc	r24, r1
 f3c:	91 1d       	adc	r25, r1
 f3e:	a1 1d       	adc	r26, r1
 f40:	20 d0       	rcall	.+64     	; 0xf82 <__ultoa_invert+0x84>
 f42:	09 f4       	brne	.+2      	; 0xf46 <__ultoa_invert+0x48>
 f44:	68 94       	set
 f46:	3f 91       	pop	r19
 f48:	2a e0       	ldi	r18, 0x0A	; 10
 f4a:	26 9f       	mul	r18, r22
 f4c:	11 24       	eor	r1, r1
 f4e:	30 19       	sub	r19, r0
 f50:	30 5d       	subi	r19, 0xD0	; 208
 f52:	31 93       	st	Z+, r19
 f54:	de f6       	brtc	.-74     	; 0xf0c <__ultoa_invert+0xe>
 f56:	cf 01       	movw	r24, r30
 f58:	08 95       	ret
 f5a:	46 2f       	mov	r20, r22
 f5c:	47 70       	andi	r20, 0x07	; 7
 f5e:	40 5d       	subi	r20, 0xD0	; 208
 f60:	41 93       	st	Z+, r20
 f62:	b3 e0       	ldi	r27, 0x03	; 3
 f64:	0f d0       	rcall	.+30     	; 0xf84 <__ultoa_invert+0x86>
 f66:	c9 f7       	brne	.-14     	; 0xf5a <__ultoa_invert+0x5c>
 f68:	f6 cf       	rjmp	.-20     	; 0xf56 <__ultoa_invert+0x58>
 f6a:	46 2f       	mov	r20, r22
 f6c:	4f 70       	andi	r20, 0x0F	; 15
 f6e:	40 5d       	subi	r20, 0xD0	; 208
 f70:	4a 33       	cpi	r20, 0x3A	; 58
 f72:	18 f0       	brcs	.+6      	; 0xf7a <__ultoa_invert+0x7c>
 f74:	49 5d       	subi	r20, 0xD9	; 217
 f76:	31 fd       	sbrc	r19, 1
 f78:	40 52       	subi	r20, 0x20	; 32
 f7a:	41 93       	st	Z+, r20
 f7c:	02 d0       	rcall	.+4      	; 0xf82 <__ultoa_invert+0x84>
 f7e:	a9 f7       	brne	.-22     	; 0xf6a <__ultoa_invert+0x6c>
 f80:	ea cf       	rjmp	.-44     	; 0xf56 <__ultoa_invert+0x58>
 f82:	b4 e0       	ldi	r27, 0x04	; 4
 f84:	a6 95       	lsr	r26
 f86:	97 95       	ror	r25
 f88:	87 95       	ror	r24
 f8a:	77 95       	ror	r23
 f8c:	67 95       	ror	r22
 f8e:	ba 95       	dec	r27
 f90:	c9 f7       	brne	.-14     	; 0xf84 <__ultoa_invert+0x86>
 f92:	00 97       	sbiw	r24, 0x00	; 0
 f94:	61 05       	cpc	r22, r1
 f96:	71 05       	cpc	r23, r1
 f98:	08 95       	ret
 f9a:	9b 01       	movw	r18, r22
 f9c:	ac 01       	movw	r20, r24
 f9e:	0a 2e       	mov	r0, r26
 fa0:	06 94       	lsr	r0
 fa2:	57 95       	ror	r21
 fa4:	47 95       	ror	r20
 fa6:	37 95       	ror	r19
 fa8:	27 95       	ror	r18
 faa:	ba 95       	dec	r27
 fac:	c9 f7       	brne	.-14     	; 0xfa0 <__ultoa_invert+0xa2>
 fae:	62 0f       	add	r22, r18
 fb0:	73 1f       	adc	r23, r19
 fb2:	84 1f       	adc	r24, r20
 fb4:	95 1f       	adc	r25, r21
 fb6:	a0 1d       	adc	r26, r0
 fb8:	08 95       	ret

00000fba <_exit>:
 fba:	f8 94       	cli

00000fbc <__stop_program>:
 fbc:	ff cf       	rjmp	.-2      	; 0xfbc <__stop_program>
